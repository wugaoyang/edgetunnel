{
  "version": 3,
  "sources": ["../bundle-EhNwNK/checked-fetch.js", "../../../src/core/AppParam.js", "../../../src/utils/CommonUtils.js", "../../../src/utils/SubUtils.js", "../../../src/core/SubService.js", "../../../src/_worker.js", "../../../node_modules/wrangler/templates/middleware/middleware-ensure-req-body-drained.ts", "../../../node_modules/wrangler/templates/middleware/middleware-miniflare3-json-error.ts", "../bundle-EhNwNK/middleware-insertion-facade.js", "../../../node_modules/wrangler/templates/middleware/common.ts", "../bundle-EhNwNK/middleware-loader.entry.ts"],
  "sourceRoot": "D:\\Dev\\Workspaces\\CloudFlare\\edgetunnel\\.wrangler\\tmp\\dev-MVfRLL",
  "sourcesContent": ["const urls = new Set();\n\nfunction checkURL(request, init) {\n\tconst url =\n\t\trequest instanceof URL\n\t\t\t? request\n\t\t\t: new URL(\n\t\t\t\t\t(typeof request === \"string\"\n\t\t\t\t\t\t? new Request(request, init)\n\t\t\t\t\t\t: request\n\t\t\t\t\t).url\n\t\t\t\t);\n\tif (url.port && url.port !== \"443\" && url.protocol === \"https:\") {\n\t\tif (!urls.has(url.toString())) {\n\t\t\turls.add(url.toString());\n\t\t\tconsole.warn(\n\t\t\t\t`WARNING: known issue with \\`fetch()\\` requests to custom HTTPS ports in published Workers:\\n` +\n\t\t\t\t\t` - ${url.toString()} - the custom port will be ignored when the Worker is published using the \\`wrangler deploy\\` command.\\n`\n\t\t\t);\n\t\t}\n\t}\n}\n\nglobalThis.fetch = new Proxy(globalThis.fetch, {\n\tapply(target, thisArg, argArray) {\n\t\tconst [request, init] = argArray;\n\t\tcheckURL(request, init);\n\t\treturn Reflect.apply(target, thisArg, argArray);\n\t},\n});\n", "//\u7A0B\u5E8F\u53C2\u6570\u914D\u7F6E\r\nexport default class AppParam {\r\n\r\n    static userID = '80cd4a77-141a-43c9-991b-08263cfe9c10';\r\n// \u5C0F\u767D\u52FF\u52A8\uFF0C\u8BE5\u5730\u5740\u5E76\u4E0D\u5F71\u54CD\u4F60\u7684\u7F51\u901F\uFF0C\u8FD9\u662F\u7ED9CF\u4EE3\u7406\u4F7F\u7528\u7684\u3002\r\n// 'cdn.xn--b6gac.eu.org,\r\n// cdn-all.xn--b6gac.eu.org,\r\n// workers.cloudflare.cyou'\r\n// 5.161.191.23\r\n    static proxyIP = '142.171.140.152';\r\n\r\n    static sub = '';// \u907F\u514D\u9879\u76EE\u88AB\u6EE5\u7528\uFF0C\u73B0\u5DF2\u53D6\u6D88\u5185\u7F6E\u8BA2\u9605\u5668\r\n    static subconverters = ['SUBAPI.fxxk.dedyn.io', 'psub.888005.xyz', 'psub.tech-site.us.kg','localhost:8081']\r\n    static subconverter = 'SUBAPI.fxxk.dedyn.io';// clash\u8BA2\u9605\u8F6C\u6362\u540E\u7AEF\uFF0C\u76EE\u524D\u4F7F\u7528CM\u7684\u8BA2\u9605\u8F6C\u6362\u529F\u80FD\u3002\u81EA\u5E26\u865A\u5047uuid\u548Chost\u8BA2\u9605\u3002\r\n    // static subconverter = 'psub.888005.xyz';// clash\u8BA2\u9605\u8F6C\u6362\u540E\u7AEF\uFF0C\u76EE\u524D\u4F7F\u7528CM\u7684\u8BA2\u9605\u8F6C\u6362\u529F\u80FD\u3002\u81EA\u5E26\u865A\u5047uuid\u548Chost\u8BA2\u9605\u3002\r\n    // static subconverter = 'psub.tech-site.us.kg';// clash\u8BA2\u9605\u8F6C\u6362\u540E\u7AEF\uFF0C\u76EE\u524D\u4F7F\u7528CM\u7684\u8BA2\u9605\u8F6C\u6362\u529F\u80FD\u3002\u81EA\u5E26\u865A\u5047uuid\u548Chost\u8BA2\u9605\u3002\r\n    // static subconfig = \"https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/Clash/config/ACL4SSR_Online_Mini_MultiMode.ini\"; //\u8BA2\u9605\u914D\u7F6E\u6587\u4EF6\r\n    static subconfig = \"https://text.tech-site.us.kg/ACL4SSR_Online_Mini_MultiMode.ini?token=ADMIN\"; //\u8BA2\u9605\u914D\u7F6E\u6587\u4EF6\r\n    static subProtocol = 'https';\r\n    static subProtocol2 = 'http';\r\n// The user name and password do not contain special characters\r\n// Setting the address will ignore proxyIP\r\n// Example:  user:pass@host:port  or  host:port\r\n    static socks5Address = '';\r\n\r\n    static parsedSocks5Address = {};\r\n    static enableSocks = false;\r\n\r\n// \u865A\u5047uuid\u548Chostname\uFF0C\u7528\u4E8E\u53D1\u9001\u7ED9\u914D\u7F6E\u751F\u6210\u670D\u52A1\r\n    static fakeUserID;\r\n    static fakeHostName;\r\n    static noTLS = 'false';\r\n    static expire = 4102329600;//2099-12-31\r\n    static proxyIPs;\r\n    static socks5s;\r\n    static go2Socks5s = [\r\n        '*ttvnw.net',\r\n    ];\r\n    static addresses = [\r\n        //\u5F53sub\u4E3A\u7A7A\u65F6\u542F\u7528\u672C\u5730\u4F18\u9009\u57DF\u540D/\u4F18\u9009IP\uFF0C\u82E5\u4E0D\u5E26\u7AEF\u53E3\u53F7 TLS\u9ED8\u8BA4\u7AEF\u53E3\u4E3A443\uFF0C#\u53F7\u540E\u4E3A\u5907\u6CE8\u522B\u540D\r\n        /*\r\n        'Join.my.Telegram.channel.CMLiussss.to.unlock.more.premium.nodes.cf.090227.xyz#\u52A0\u5165\u6211\u7684\u9891\u9053t.me/CMLiussss\u89E3\u9501\u66F4\u591A\u4F18\u9009\u8282\u70B9',\r\n        'visa.cn:443',\r\n        'www.visa.com:8443',\r\n        'cis.visa.com:2053',\r\n        'africa.visa.com:2083',\r\n        'www.visa.com.sg:2087',\r\n        'www.visaeurope.at:2096',\r\n        'www.visa.com.mt:8443',\r\n        'qa.visamiddleeast.com',\r\n        'time.is',\r\n        'www.wto.org:8443',\r\n        'chatgpt.com:2087',\r\n        'icook.hk',\r\n        '104.17.0.0#IPv4',\r\n        '[2606:4700::]#IPv6'\r\n        */\r\n    ];\r\n    static addressesapi = [];\r\n    static addressesnotls = [\r\n        //\u5F53sub\u4E3A\u7A7A\u4E14\u57DF\u540D\u5E26\u6709\"worker\"\u5B57\u6837\u65F6\u542F\u7528\u672C\u5730\u4F18\u9009\u57DF\u540D/\u4F18\u9009IP\uFF0C\u82E5\u4E0D\u5E26\u7AEF\u53E3\u53F7 noTLS\u9ED8\u8BA4\u7AEF\u53E3\u4E3A80\uFF0C#\u53F7\u540E\u4E3A\u5907\u6CE8\u522B\u540D\r\n        /*\r\n        'usa.visa.com',\r\n        'myanmar.visa.com:8080',\r\n        'www.visa.com.tw:8880',\r\n        'www.visaeurope.ch:2052',\r\n        'www.visa.com.br:2082',\r\n        'www.visasoutheasteurope.com:2086',\r\n        '[2606:4700::1]:2095#IPv6'\r\n        */\r\n    ];\r\n    static addressesnotlsapi = [];\r\n    static addressescsv = [];\r\n    static DLS = 8;\r\n    static FileName = 'edgetunnel';\r\n    static BotToken = '';\r\n    static ChatID = '';\r\n    static proxyhosts = [];//\u672C\u5730\u4EE3\u7406\u57DF\u540D\u6C60\r\n    static proxyhostsURL = 'https://raw.githubusercontent.com/cmliu/CFcdnVmess2sub/main/proxyhosts';//\u5728\u7EBF\u4EE3\u7406\u57DF\u540D\u6C60URL\r\n    static RproxyIP = 'false';\r\n}\r\n\r\n", "// \u9884\u8BA1\u7B97 0-255 \u6BCF\u4E2A\u5B57\u8282\u7684\u5341\u516D\u8FDB\u5236\u8868\u793A\r\nimport AppParam from '../core/AppParam';\r\n\r\nconst byteToHex = [];\r\nfor (let i = 0; i < 256; ++i) {\r\n\t// (i + 256).toString(16) \u786E\u4FDD\u603B\u662F\u5F97\u5230\u4E24\u4F4D\u6570\u7684\u5341\u516D\u8FDB\u5236\r\n\t// .slice(1) \u5220\u9664\u524D\u5BFC\u7684 \"1\"\uFF0C\u53EA\u4FDD\u7559\u4E24\u4F4D\u5341\u516D\u8FDB\u5236\u6570\r\n\tbyteToHex.push((i + 256).toString(16).slice(1));\r\n}\r\n\r\nexport default class CommonUtils{\r\n\r\n\tstatic isValidIPv4(address) {\r\n\t\tconst ipv4Regex = /^(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$/;\r\n\t\treturn ipv4Regex.test(address);\r\n\t}\r\n\r\n\t/**\r\n\t * \u8FD9\u4E0D\u662F\u771F\u6B63\u7684 UUID \u9A8C\u8BC1\uFF0C\u800C\u662F\u4E00\u4E2A\u7B80\u5316\u7684\u7248\u672C\r\n\t * @param {string} uuid \u8981\u9A8C\u8BC1\u7684 UUID \u5B57\u7B26\u4E32\r\n\t * @returns {boolean} \u5982\u679C\u5B57\u7B26\u4E32\u5339\u914D UUID \u683C\u5F0F\u5219\u8FD4\u56DE true\uFF0C\u5426\u5219\u8FD4\u56DE false\r\n\t */\r\n\tstatic isValidUUID(uuid) {\r\n\t\t// \u5B9A\u4E49\u4E00\u4E2A\u6B63\u5219\u8868\u8FBE\u5F0F\u6765\u5339\u914D UUID \u683C\u5F0F\r\n\t\tconst uuidRegex = /^[0-9a-f]{8}-[0-9a-f]{4}-[4][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$/i;\r\n\r\n\t\t// \u4F7F\u7528\u6B63\u5219\u8868\u8FBE\u5F0F\u6D4B\u8BD5 UUID \u5B57\u7B26\u4E32\r\n\t\treturn uuidRegex.test(uuid);\r\n\t}\r\n\r\n\t/**\r\n\t * \u5C06\u5B57\u8282\u6570\u7EC4\u8F6C\u6362\u4E3A UUID \u5B57\u7B26\u4E32\uFF0C\u5E76\u9A8C\u8BC1\u5176\u6709\u6548\u6027\r\n\t * \u8FD9\u662F\u4E00\u4E2A\u5B89\u5168\u7684\u51FD\u6570\uFF0C\u5B83\u786E\u4FDD\u8FD4\u56DE\u7684 UUID \u683C\u5F0F\u6B63\u786E\r\n\t * @param {Uint8Array} arr \u5305\u542B UUID \u5B57\u8282\u7684\u6570\u7EC4\r\n\t * @param {number} offset \u6570\u7EC4\u4E2D UUID \u5F00\u59CB\u7684\u4F4D\u7F6E\uFF0C\u9ED8\u8BA4\u4E3A 0\r\n\t * @returns {string} \u6709\u6548\u7684 UUID \u5B57\u7B26\u4E32\r\n\t * @throws {TypeError} \u5982\u679C\u751F\u6210\u7684 UUID \u5B57\u7B26\u4E32\u65E0\u6548\r\n\t */\r\n\tstatic stringify(arr, offset = 0) {\r\n\t\t// \u4F7F\u7528\u4E0D\u5B89\u5168\u7684\u51FD\u6570\u5FEB\u901F\u751F\u6210 UUID \u5B57\u7B26\u4E32\r\n\t\tconst uuid = this.unsafeStringify(arr, offset);\r\n\t\t// \u9A8C\u8BC1\u751F\u6210\u7684 UUID \u662F\u5426\u6709\u6548\r\n\t\tif (!CommonUtils.isValidUUID(uuid)) {\r\n\t\t\t// \u539F\uFF1Athrow TypeError(\"Stringified UUID is invalid\");\r\n\t\t\tthrow TypeError(`\u751F\u6210\u7684 UUID \u4E0D\u7B26\u5408\u89C4\u8303 ${uuid}`);\r\n\t\t\t//uuid = userID;\r\n\t\t}\r\n\t\treturn uuid;\r\n\t}\r\n\t/**\r\n\t * \u5FEB\u901F\u5730\u5C06\u5B57\u8282\u6570\u7EC4\u8F6C\u6362\u4E3A UUID \u5B57\u7B26\u4E32\uFF0C\u4E0D\u8FDB\u884C\u6709\u6548\u6027\u68C0\u67E5\r\n\t * \u8FD9\u662F\u4E00\u4E2A\u5E95\u5C42\u51FD\u6570\uFF0C\u76F4\u63A5\u64CD\u4F5C\u5B57\u8282\uFF0C\u4E0D\u505A\u4EFB\u4F55\u9A8C\u8BC1\r\n\t * @param {Uint8Array} arr \u5305\u542B UUID \u5B57\u8282\u7684\u6570\u7EC4\r\n\t * @param {number} offset \u6570\u7EC4\u4E2D UUID \u5F00\u59CB\u7684\u4F4D\u7F6E\uFF0C\u9ED8\u8BA4\u4E3A 0\r\n\t * @returns {string} UUID \u5B57\u7B26\u4E32\r\n\t */\r\n\tstatic unsafeStringify(arr, offset = 0) {\r\n\t\t// \u76F4\u63A5\u4ECE\u67E5\u627E\u8868\u4E2D\u83B7\u53D6\u6BCF\u4E2A\u5B57\u8282\u7684\u5341\u516D\u8FDB\u5236\u8868\u793A\uFF0C\u5E76\u62FC\u63A5\u6210 UUID \u683C\u5F0F\r\n\t\t// 8-4-4-4-12 \u7684\u5206\u7EC4\u662F\u901A\u8FC7\u7CBE\u5FC3\u653E\u7F6E\u7684\u8FDE\u5B57\u7B26 \"-\" \u5B9E\u73B0\u7684\r\n\t\t// toLowerCase() \u786E\u4FDD\u6574\u4E2A UUID \u662F\u5C0F\u5199\u7684\r\n\t\treturn (byteToHex[arr[offset - 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + \"-\" +\r\n\t\t\tbyteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + \"-\" +\r\n\t\t\tbyteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + \"-\" +\r\n\t\t\tbyteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + \"-\" +\r\n\t\t\tbyteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] +\r\n\t\t\tbyteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]]).toLowerCase();\r\n\t}\r\n\t/**\r\n\t * \u5C06 Base64 \u7F16\u7801\u7684\u5B57\u7B26\u4E32\u8F6C\u6362\u4E3A ArrayBuffer\r\n\t *\r\n\t * @param {string} base64Str Base64 \u7F16\u7801\u7684\u8F93\u5165\u5B57\u7B26\u4E32\r\n\t * @returns {{ earlyData: ArrayBuffer | undefined, error: Error | null }} \u8FD4\u56DE\u89E3\u7801\u540E\u7684 ArrayBuffer \u6216\u9519\u8BEF\r\n\t */\r\n\tstatic base64ToArrayBuffer(base64Str) {\r\n\t\t// \u5982\u679C\u8F93\u5165\u4E3A\u7A7A\uFF0C\u76F4\u63A5\u8FD4\u56DE\u7A7A\u7ED3\u679C\r\n\t\tif (!base64Str) {\r\n\t\t\treturn { error: null };\r\n\t\t}\r\n\t\ttry {\r\n\t\t\t// Go \u8BED\u8A00\u4F7F\u7528\u4E86 URL \u5B89\u5168\u7684 Base64 \u53D8\u4F53\uFF08RFC 4648\uFF09\r\n\t\t\t// \u8FD9\u79CD\u53D8\u4F53\u4F7F\u7528 '-' \u548C '_' \u6765\u4EE3\u66FF\u6807\u51C6 Base64 \u4E2D\u7684 '+' \u548C '/'\r\n\t\t\t// JavaScript \u7684 atob \u51FD\u6570\u4E0D\u76F4\u63A5\u652F\u6301\u8FD9\u79CD\u53D8\u4F53\uFF0C\u6240\u4EE5\u6211\u4EEC\u9700\u8981\u5148\u8F6C\u6362\r\n\t\t\tbase64Str = base64Str.replace(/-/g, '+').replace(/_/g, '/');\r\n\r\n\t\t\t// \u4F7F\u7528 atob \u51FD\u6570\u89E3\u7801 Base64 \u5B57\u7B26\u4E32\r\n\t\t\t// atob \u5C06 Base64 \u7F16\u7801\u7684 ASCII \u5B57\u7B26\u4E32\u8F6C\u6362\u4E3A\u539F\u59CB\u7684\u4E8C\u8FDB\u5236\u5B57\u7B26\u4E32\r\n\t\t\tconst decode = atob(base64Str);\r\n\r\n\t\t\t// \u5C06\u4E8C\u8FDB\u5236\u5B57\u7B26\u4E32\u8F6C\u6362\u4E3A Uint8Array\r\n\t\t\t// \u8FD9\u662F\u901A\u8FC7\u904D\u5386\u5B57\u7B26\u4E32\u4E2D\u7684\u6BCF\u4E2A\u5B57\u7B26\u5E76\u83B7\u53D6\u5176 Unicode \u7F16\u7801\u503C\uFF080-255\uFF09\u6765\u5B8C\u6210\u7684\r\n\t\t\tconst arryBuffer = Uint8Array.from(decode, (c) => c.charCodeAt(0));\r\n\r\n\t\t\t// \u8FD4\u56DE Uint8Array \u7684\u5E95\u5C42 ArrayBuffer\r\n\t\t\t// \u8FD9\u662F\u5B9E\u9645\u7684\u4E8C\u8FDB\u5236\u6570\u636E\uFF0C\u53EF\u4EE5\u7528\u4E8E\u7F51\u7EDC\u4F20\u8F93\u6216\u5176\u4ED6\u4E8C\u8FDB\u5236\u64CD\u4F5C\r\n\t\t\treturn { earlyData: arryBuffer.buffer, error: null };\r\n\t\t} catch (error) {\r\n\t\t\t// \u5982\u679C\u5728\u4EFB\u4F55\u6B65\u9AA4\u4E2D\u51FA\u73B0\u9519\u8BEF\uFF08\u5982\u975E\u6CD5 Base64 \u5B57\u7B26\uFF09\uFF0C\u5219\u8FD4\u56DE\u9519\u8BEF\r\n\t\t\treturn { error };\r\n\t\t}\r\n\t}\r\n\t/**\r\n\t * SOCKS5 \u4EE3\u7406\u5730\u5740\u89E3\u6790\u5668\r\n\t * \u6B64\u51FD\u6570\u7528\u4E8E\u89E3\u6790 SOCKS5 \u4EE3\u7406\u5730\u5740\u5B57\u7B26\u4E32\uFF0C\u63D0\u53D6\u51FA\u7528\u6237\u540D\u3001\u5BC6\u7801\u3001\u4E3B\u673A\u540D\u548C\u7AEF\u53E3\u53F7\r\n\t *\r\n\t * @param {string} address SOCKS5 \u4EE3\u7406\u5730\u5740\uFF0C\u683C\u5F0F\u53EF\u4EE5\u662F\uFF1A\r\n\t *   - \"username:password@hostname:port\" \uFF08\u5E26\u8BA4\u8BC1\uFF09\r\n\t *   - \"hostname:port\" \uFF08\u4E0D\u9700\u8BA4\u8BC1\uFF09\r\n\t *   - \"username:password@[ipv6]:port\" \uFF08IPv6 \u5730\u5740\u9700\u8981\u7528\u65B9\u62EC\u53F7\u62EC\u8D77\u6765\uFF09\r\n\t */\r\n\tstatic socks5AddressParser(address) {\r\n\t\t// \u4F7F\u7528 \"@\" \u5206\u5272\u5730\u5740\uFF0C\u5206\u4E3A\u8BA4\u8BC1\u90E8\u5206\u548C\u670D\u52A1\u5668\u5730\u5740\u90E8\u5206\r\n\t\t// reverse() \u662F\u4E3A\u4E86\u5904\u7406\u6CA1\u6709\u8BA4\u8BC1\u4FE1\u606F\u7684\u60C5\u51B5\uFF0C\u786E\u4FDD latter \u603B\u662F\u5305\u542B\u670D\u52A1\u5668\u5730\u5740\r\n\t\tlet [latter, former] = address.split(\"@\").reverse();\r\n\t\tlet username, password, hostname, port;\r\n\r\n\t\t// \u5982\u679C\u5B58\u5728 former \u90E8\u5206\uFF0C\u8BF4\u660E\u63D0\u4F9B\u4E86\u8BA4\u8BC1\u4FE1\u606F\r\n\t\tif (former) {\r\n\t\t\tconst formers = former.split(\":\");\r\n\t\t\tif (formers.length !== 2) {\r\n\t\t\t\tthrow new Error('\u65E0\u6548\u7684 SOCKS \u5730\u5740\u683C\u5F0F\uFF1A\u8BA4\u8BC1\u90E8\u5206\u5FC5\u987B\u662F \"username:password\" \u7684\u5F62\u5F0F');\r\n\t\t\t}\r\n\t\t\t[username, password] = formers;\r\n\t\t}\r\n\r\n\t\t// \u89E3\u6790\u670D\u52A1\u5668\u5730\u5740\u90E8\u5206\r\n\t\tconst latters = latter.split(\":\");\r\n\t\t// \u4ECE\u672B\u5C3E\u63D0\u53D6\u7AEF\u53E3\u53F7\uFF08\u56E0\u4E3A IPv6 \u5730\u5740\u4E2D\u4E5F\u5305\u542B\u5192\u53F7\uFF09\r\n\t\tport = Number(latters.pop());\r\n\t\tif (isNaN(port)) {\r\n\t\t\tthrow new Error('\u65E0\u6548\u7684 SOCKS \u5730\u5740\u683C\u5F0F\uFF1A\u7AEF\u53E3\u53F7\u5FC5\u987B\u662F\u6570\u5B57');\r\n\t\t}\r\n\r\n\t\t// \u5269\u4F59\u90E8\u5206\u5C31\u662F\u4E3B\u673A\u540D\uFF08\u53EF\u80FD\u662F\u57DF\u540D\u3001IPv4 \u6216 IPv6 \u5730\u5740\uFF09\r\n\t\thostname = latters.join(\":\");\r\n\r\n\t\t// \u5904\u7406 IPv6 \u5730\u5740\u7684\u7279\u6B8A\u60C5\u51B5\r\n\t\t// IPv6 \u5730\u5740\u5305\u542B\u591A\u4E2A\u5192\u53F7\uFF0C\u6240\u4EE5\u5FC5\u987B\u7528\u65B9\u62EC\u53F7\u62EC\u8D77\u6765\uFF0C\u5982 [2001:db8::1]\r\n\t\tconst regex = /^\\[.*\\]$/;\r\n\t\tif (hostname.includes(\":\") && !regex.test(hostname)) {\r\n\t\t\tthrow new Error('\u65E0\u6548\u7684 SOCKS \u5730\u5740\u683C\u5F0F\uFF1AIPv6 \u5730\u5740\u5FC5\u987B\u7528\u65B9\u62EC\u53F7\u62EC\u8D77\u6765\uFF0C\u5982 [2001:db8::1]');\r\n\t\t}\r\n\r\n\t\t//if (/^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?).){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$/.test(hostname)) hostname = `${atob('d3d3Lg==')}${hostname}${atob('LmlwLjA5MDIyNy54eXo=')}`;\r\n\t\t// \u8FD4\u56DE\u89E3\u6790\u540E\u7684\u7ED3\u679C\r\n\t\treturn {\r\n\t\t\tusername,  // \u7528\u6237\u540D\uFF0C\u5982\u679C\u6CA1\u6709\u5219\u4E3A undefined\r\n\t\t\tpassword,  // \u5BC6\u7801\uFF0C\u5982\u679C\u6CA1\u6709\u5219\u4E3A undefined\r\n\t\t\thostname,  // \u4E3B\u673A\u540D\uFF0C\u53EF\u4EE5\u662F\u57DF\u540D\u3001IPv4 \u6216 IPv6 \u5730\u5740\r\n\t\t\tport,     // \u7AEF\u53E3\u53F7\uFF0C\u5DF2\u8F6C\u6362\u4E3A\u6570\u5B57\u7C7B\u578B\r\n\t\t}\r\n\t}\r\n\t/**\r\n\t * \u6062\u590D\u88AB\u4F2A\u88C5\u7684\u4FE1\u606F\r\n\t * \u8FD9\u4E2A\u51FD\u6570\u7528\u4E8E\u5C06\u5185\u5BB9\u4E2D\u7684\u5047\u7528\u6237ID\u548C\u5047\u4E3B\u673A\u540D\u66FF\u6362\u56DE\u771F\u5B9E\u7684\u503C\r\n\t *\r\n\t * @param {string} content \u9700\u8981\u5904\u7406\u7684\u5185\u5BB9\r\n\t * @param {string} userID \u771F\u5B9E\u7684\u7528\u6237ID\r\n\t * @param {string} hostName \u771F\u5B9E\u7684\u4E3B\u673A\u540D\r\n\t * @param {boolean} isBase64 \u5185\u5BB9\u662F\u5426\u662FBase64\u7F16\u7801\u7684\r\n\t * @returns {string} \u6062\u590D\u771F\u5B9E\u4FE1\u606F\u540E\u7684\u5185\u5BB9\r\n\t */\r\n\tstatic revertFakeInfo(content, userID, hostName, isBase64) {\r\n\t\tif (isBase64) content = atob(content);  // \u5982\u679C\u5185\u5BB9\u662FBase64\u7F16\u7801\u7684\uFF0C\u5148\u89E3\u7801\r\n\r\n\t\t// \u4F7F\u7528\u6B63\u5219\u8868\u8FBE\u5F0F\u5168\u5C40\u66FF\u6362\uFF08'g'\u6807\u5FD7\uFF09\r\n\t\t// \u5C06\u6240\u6709\u51FA\u73B0\u7684\u5047\u7528\u6237ID\u548C\u5047\u4E3B\u673A\u540D\u66FF\u6362\u4E3A\u771F\u5B9E\u7684\u503C\r\n\t\tcontent = content.replace(new RegExp(AppParam.fakeUserID, 'g'), userID)\r\n\t\t\t.replace(new RegExp(AppParam.fakeHostName, 'g'), hostName);\r\n\t\tif (isBase64) content = btoa(content);  // \u5982\u679C\u539F\u5185\u5BB9\u662FBase64\u7F16\u7801\u7684\uFF0C\u5904\u7406\u5B8C\u540E\u518D\u6B21\u7F16\u7801\r\n\t\treturn content;\r\n\t}\r\n\t/**\r\n\t * \u89E3\u6790\u5E76\u6E05\u7406\u73AF\u5883\u53D8\u91CF\u4E2D\u7684\u5730\u5740\u5217\u8868\r\n\t * \u8FD9\u4E2A\u51FD\u6570\u7528\u4E8E\u5904\u7406\u5305\u542B\u591A\u4E2A\u5730\u5740\u7684\u73AF\u5883\u53D8\u91CF\r\n\t * \u5B83\u4F1A\u79FB\u9664\u6240\u6709\u7684\u7A7A\u767D\u5B57\u7B26\u3001\u5F15\u53F7\u7B49\uFF0C\u5E76\u5C06\u5730\u5740\u5217\u8868\u8F6C\u6362\u4E3A\u6570\u7EC4\r\n\t *\r\n\t * @param {string} envadd \u5305\u542B\u5730\u5740\u5217\u8868\u7684\u73AF\u5883\u53D8\u91CF\u503C\r\n\t * @returns {Promise<string[]>} \u6E05\u7406\u548C\u5206\u5272\u540E\u7684\u5730\u5740\u6570\u7EC4\r\n\t */\r\n\tstatic async ADD(envadd) {\r\n\t\t// \u5C06\u5236\u8868\u7B26\u3001\u53CC\u5F15\u53F7\u3001\u5355\u5F15\u53F7\u548C\u6362\u884C\u7B26\u90FD\u66FF\u6362\u4E3A\u9017\u53F7\r\n\t\t// \u7136\u540E\u5C06\u8FDE\u7EED\u7684\u591A\u4E2A\u9017\u53F7\u66FF\u6362\u4E3A\u5355\u4E2A\u9017\u53F7\r\n\t\tvar addtext = envadd.replace(/[\t|\"'\\r\\n]+/g, ',').replace(/,+/g, ',');\r\n\r\n\t\t// \u5220\u9664\u5F00\u5934\u548C\u7ED3\u5C3E\u7684\u9017\u53F7\uFF08\u5982\u679C\u6709\u7684\u8BDD\uFF09\r\n\t\tif (addtext.charAt(0) == ',') addtext = addtext.slice(1);\r\n\t\tif (addtext.charAt(addtext.length - 1) == ',') addtext = addtext.slice(0, addtext.length - 1);\r\n\r\n\t\t// \u4F7F\u7528\u9017\u53F7\u5206\u5272\u5B57\u7B26\u4E32\uFF0C\u5F97\u5230\u5730\u5740\u6570\u7EC4\r\n\t\tconst add = addtext.split(',');\r\n\r\n\t\treturn add;\r\n\t}\r\n\t/**\r\n\t * \u53CC\u91CDMD5\u54C8\u5E0C\u51FD\u6570\r\n\t * \u8FD9\u4E2A\u51FD\u6570\u5BF9\u8F93\u5165\u6587\u672C\u8FDB\u884C\u4E24\u6B21MD5\u54C8\u5E0C\uFF0C\u589E\u5F3A\u5B89\u5168\u6027\r\n\t * \u7B2C\u4E8C\u6B21\u54C8\u5E0C\u4F7F\u7528\u7B2C\u4E00\u6B21\u54C8\u5E0C\u7ED3\u679C\u7684\u4E00\u90E8\u5206\u4F5C\u4E3A\u8F93\u5165\r\n\t *\r\n\t * @param {string} text \u8981\u54C8\u5E0C\u7684\u6587\u672C\r\n\t * @returns {Promise<string>} \u53CC\u91CD\u54C8\u5E0C\u540E\u7684\u5C0F\u5199\u5341\u516D\u8FDB\u5236\u5B57\u7B26\u4E32\r\n\t */\r\n\tstatic async MD5MD5(text) {\r\n\t\tconst encoder = new TextEncoder();\r\n\r\n\t\t// \u7B2C\u4E00\u6B21MD5\u54C8\u5E0C\r\n\t\tconst firstPass = await crypto.subtle.digest('MD5', encoder.encode(text));\r\n\t\tconst firstPassArray = Array.from(new Uint8Array(firstPass));\r\n\t\tconst firstHex = firstPassArray.map(b => b.toString(16).padStart(2, '0')).join('');\r\n\r\n\t\t// \u7B2C\u4E8C\u6B21MD5\u54C8\u5E0C\uFF0C\u4F7F\u7528\u7B2C\u4E00\u6B21\u54C8\u5E0C\u7ED3\u679C\u7684\u4E2D\u95F4\u90E8\u5206\uFF08\u7D22\u5F157\u523026\uFF09\r\n\t\tconst secondPass = await crypto.subtle.digest('MD5', encoder.encode(firstHex.slice(7, 27)));\r\n\t\tconst secondPassArray = Array.from(new Uint8Array(secondPass));\r\n\t\tconst secondHex = secondPassArray.map(b => b.toString(16).padStart(2, '0')).join('');\r\n\r\n\t\treturn secondHex.toLowerCase();  // \u8FD4\u56DE\u5C0F\u5199\u7684\u5341\u516D\u8FDB\u5236\u5B57\u7B26\u4E32\r\n\t}\r\n\r\n\tstatic isLocalHost(hostName = ''){\r\n\t\tif(hostName && (hostName.includes(\"localhost\") || hostName.includes(\"127.0.0.1\"))){\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\tstatic urlSafeBase64Encode(input) {\r\n\t\treturn btoa(input).replace(/\\+/g, \"-\").replace(/\\//g, \"_\").replace(/=+$/, \"\");\r\n\t}\r\n\tstatic urlSafeBase64Decode(input) {\r\n\t\tconst padded = input + \"=\".repeat((4 - input.length % 4) % 4);\r\n\t\treturn atob(padded.replace(/-/g, \"+\").replace(/_/g, \"/\"));\r\n\t}\r\n}\r\n", "//\u8BA2\u9605\u5DE5\u5177\r\n\r\nimport AppParam from '../core/AppParam';\r\nimport CommonUtils from './CommonUtils';\r\n\r\nconst \u5565\u5565\u5565_\u5199\u7684\u8FD9\u662F\u5565\u554A = 'dmxlc3M=';\r\nconst subParams = ['sub','base64','b64','clash','singbox','sb'];\r\n\r\nexport default class SubUtils{\r\n\r\n\r\n\t/**\r\n\t * \u89E3\u6790\u5E76\u6E05\u7406\u73AF\u5883\u53D8\u91CF\u4E2D\u7684\u5730\u5740\u5217\u8868\r\n\t * \u8FD9\u4E2A\u51FD\u6570\u7528\u4E8E\u5904\u7406\u5305\u542B\u591A\u4E2A\u5730\u5740\u7684\u73AF\u5883\u53D8\u91CF\r\n\t * \u5B83\u4F1A\u79FB\u9664\u6240\u6709\u7684\u7A7A\u767D\u5B57\u7B26\u3001\u5F15\u53F7\u7B49\uFF0C\u5E76\u5C06\u5730\u5740\u5217\u8868\u8F6C\u6362\u4E3A\u6570\u7EC4\r\n\t *\r\n\t * @param {string} envadd \u5305\u542B\u5730\u5740\u5217\u8868\u7684\u73AF\u5883\u53D8\u91CF\u503C\r\n\t * @returns {Promise<string[]>} \u6E05\u7406\u548C\u5206\u5272\u540E\u7684\u5730\u5740\u6570\u7EC4\r\n\t */\r\n\tstatic async ADD(envadd) {\r\n\t\t// \u5C06\u5236\u8868\u7B26\u3001\u53CC\u5F15\u53F7\u3001\u5355\u5F15\u53F7\u548C\u6362\u884C\u7B26\u90FD\u66FF\u6362\u4E3A\u9017\u53F7\r\n\t\t// \u7136\u540E\u5C06\u8FDE\u7EED\u7684\u591A\u4E2A\u9017\u53F7\u66FF\u6362\u4E3A\u5355\u4E2A\u9017\u53F7\r\n\t\tvar addtext = envadd.replace(/[\t|\"'\\r\\n]+/g, ',').replace(/,+/g, ',');\r\n\r\n\t\t// \u5220\u9664\u5F00\u5934\u548C\u7ED3\u5C3E\u7684\u9017\u53F7\uFF08\u5982\u679C\u6709\u7684\u8BDD\uFF09\r\n\t\tif (addtext.charAt(0) == ',') addtext = addtext.slice(1);\r\n\t\tif (addtext.charAt(addtext.length - 1) == ',') addtext = addtext.slice(0, addtext.length - 1);\r\n\r\n\t\t// \u4F7F\u7528\u9017\u53F7\u5206\u5272\u5B57\u7B26\u4E32\uFF0C\u5F97\u5230\u5730\u5740\u6570\u7EC4\r\n\t\tconst add = addtext.split(',');\r\n\r\n\t\treturn add;\r\n\t}\r\n\r\n\tstatic checkSUB(host) {\r\n\t\tif ((!AppParam.sub || AppParam.sub == '') && (AppParam.addresses.length + AppParam.addressesapi.length + AppParam.addressesnotls.length + AppParam.addressesnotlsapi.length + AppParam.addressescsv.length) == 0){\r\n\t\t\tAppParam.addresses = [\r\n\t\t\t\t'Join.my.Telegram.channel.CMLiussss.to.unlock.more.premium.nodes.cf.090227.xyz#\u52A0\u5165\u6211\u7684\u9891\u9053t.me/CMLiussss\u89E3\u9501\u66F4\u591A\u4F18\u9009\u8282\u70B9',\r\n\t\t\t\t'visa.cn:443',\r\n\t\t\t\t'www.visa.com:8443',\r\n\t\t\t\t'cis.visa.com:2053',\r\n\t\t\t\t'africa.visa.com:2083',\r\n\t\t\t\t'www.visa.com.sg:2087',\r\n\t\t\t\t'www.visaeurope.at:2096',\r\n\t\t\t\t'www.visa.com.mt:8443',\r\n\t\t\t\t'qa.visamiddleeast.com',\r\n\t\t\t\t'time.is',\r\n\t\t\t\t'www.wto.org:8443',\r\n\t\t\t\t'chatgpt.com:2087',\r\n\t\t\t\t'icook.hk',\r\n\t\t\t\t//'104.17.0.0#IPv4',\r\n\t\t\t\t'[2606:4700::]#IPv6'\r\n\t\t\t];\r\n\t\t\tif (host.includes(\".workers.dev\")) {\r\n\t\t\t\tAppParam.addressesnotls = [\r\n\t\t\t\t\t'usa.visa.com:2095',\r\n\t\t\t\t\t'myanmar.visa.com:8080',\r\n\t\t\t\t\t'www.visa.com.tw:8880',\r\n\t\t\t\t\t'www.visaeurope.ch:2052',\r\n\t\t\t\t\t'www.visa.com.br:2082',\r\n\t\t\t\t\t'www.visasoutheasteurope.com:2086'\r\n\t\t\t\t];\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tstatic \u914D\u7F6E\u4FE1\u606F(UUID, \u57DF\u540D\u5730\u5740) {\r\n\t\tconst \u534F\u8BAE\u7C7B\u578B = atob(\u5565\u5565\u5565_\u5199\u7684\u8FD9\u662F\u5565\u554A);\r\n\r\n\t\tconst \u522B\u540D = AppParam.FileName;\r\n\t\tlet \u5730\u5740 = \u57DF\u540D\u5730\u5740;\r\n\t\tlet \u7AEF\u53E3 = 443;\r\n\r\n\t\tconst \u7528\u6237ID = UUID;\r\n\t\tconst \u52A0\u5BC6\u65B9\u5F0F = 'none';\r\n\r\n\t\tconst \u4F20\u8F93\u5C42\u534F\u8BAE = 'ws';\r\n\t\tconst \u4F2A\u88C5\u57DF\u540D = \u57DF\u540D\u5730\u5740;\r\n\t\tconst \u8DEF\u5F84 = '/?ed=2560';\r\n\r\n\t\tlet \u4F20\u8F93\u5C42\u5B89\u5168 = ['tls',true];\r\n\t\tconst SNI = \u57DF\u540D\u5730\u5740;\r\n\t\tconst \u6307\u7EB9 = 'randomized';\r\n\r\n\t\tif (\u57DF\u540D\u5730\u5740.includes('.workers.dev')){\r\n\t\t\t\u5730\u5740 = 'visa.cn';\r\n\t\t\t\u7AEF\u53E3 = 80 ;\r\n\t\t\t\u4F20\u8F93\u5C42\u5B89\u5168 = ['',false];\r\n\t\t}\r\n\r\n\t\tconst v2ray = `${\u534F\u8BAE\u7C7B\u578B}://${\u7528\u6237ID}@${\u5730\u5740}:${\u7AEF\u53E3}?encryption=${\u52A0\u5BC6\u65B9\u5F0F}&security=${\u4F20\u8F93\u5C42\u5B89\u5168[0]}&sni=${SNI}&fp=${\u6307\u7EB9}&type=${\u4F20\u8F93\u5C42\u534F\u8BAE}&host=${\u4F2A\u88C5\u57DF\u540D}&path=${encodeURIComponent(\u8DEF\u5F84)}#${encodeURIComponent(\u522B\u540D)}`;\r\n\t\tconst clash = `- type: ${\u534F\u8BAE\u7C7B\u578B}\r\n  name: ${AppParam.FileName}\r\n  server: ${\u5730\u5740}\r\n  port: ${\u7AEF\u53E3}\r\n  uuid: ${\u7528\u6237ID}\r\n  network: ${\u4F20\u8F93\u5C42\u534F\u8BAE}\r\n  tls: ${\u4F20\u8F93\u5C42\u5B89\u5168[1]}\r\n  udp: false\r\n  sni: ${SNI}\r\n  client-fingerprint: ${\u6307\u7EB9}\r\n  ws-opts:\r\n    path: \"${\u8DEF\u5F84}\"\r\n    headers:\r\n      host: ${\u4F2A\u88C5\u57DF\u540D}`;\r\n\t\treturn [v2ray,clash];\r\n\t}\r\n\r\n\t/**\r\n\t * @param {string} userID\r\n\t * @param {string | null} hostName\r\n\t * @param {string} sub\r\n\t * @param {string} UA\r\n\t * @returns {Promise<string>}\r\n\t */\r\n\tstatic async getVLESSConfig(userID, hostName, sub, UA, RproxyIP, _url) {\r\n\t\tthis.checkSUB(hostName);\r\n\t\tconst userAgent = UA.toLowerCase();\r\n\t\tconst Config = this.\u914D\u7F6E\u4FE1\u606F(userID , hostName);\r\n\t\tconst v2ray = Config[0];\r\n\t\tconst clash = Config[1];\r\n\t\tlet proxyhost = \"\";\r\n\t\tif(hostName.includes(\".workers.dev\") || hostName.includes(\".pages.dev\")){\r\n\t\t\tif ( AppParam.proxyhostsURL && (!AppParam.proxyhosts || AppParam.proxyhosts.length == 0)) {\r\n\t\t\t\ttry {\r\n\t\t\t\t\tconst response = await fetch(AppParam.proxyhostsURL);\r\n\r\n\t\t\t\t\tif (!response.ok) {\r\n\t\t\t\t\t\tconsole.error('\u83B7\u53D6\u5730\u5740\u65F6\u51FA\u9519:', response.status, response.statusText);\r\n\t\t\t\t\t\treturn; // \u5982\u679C\u6709\u9519\u8BEF\uFF0C\u76F4\u63A5\u8FD4\u56DE\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tconst text = await response.text();\r\n\t\t\t\t\tconst lines = text.split('\\n');\r\n\t\t\t\t\t// \u8FC7\u6EE4\u6389\u7A7A\u884C\u6216\u53EA\u5305\u542B\u7A7A\u767D\u5B57\u7B26\u7684\u884C\r\n\t\t\t\t\tconst nonEmptyLines = lines.filter(line => line.trim() !== '');\r\n\r\n\t\t\t\t\tAppParam.proxyhosts = AppParam.proxyhosts.concat(nonEmptyLines);\r\n\t\t\t\t} catch (error) {\r\n\t\t\t\t\t//console.error('\u83B7\u53D6\u5730\u5740\u65F6\u51FA\u9519:', error);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (AppParam.proxyhosts.length != 0) proxyhost = AppParam.proxyhosts[Math.floor(Math.random() * AppParam.proxyhosts.length)] + \"/\";\r\n\t\t}\r\n\r\n\t\tif ( userAgent.includes('mozilla') && !subParams.some(_searchParams => _url.searchParams.has(_searchParams))) {\r\n\t\t\tconst newSocks5s = AppParam.socks5s.map(socks5Address => {\r\n\t\t\t\tif (socks5Address.includes('@')) return socks5Address.split('@')[1];\r\n\t\t\t\telse if (socks5Address.includes('//')) return socks5Address.split('//')[1];\r\n\t\t\t\telse return socks5Address;\r\n\t\t\t});\r\n\r\n\t\t\tlet socks5List = '';\r\n\t\t\tif( AppParam.go2Socks5s.length > 0 && AppParam.enableSocks ) {\r\n\t\t\t\tsocks5List = `${decodeURIComponent('SOCKS5%EF%BC%88%E7%99%BD%E5%90%8D%E5%8D%95%EF%BC%89%3A%20')}`;\r\n\t\t\t\tif (AppParam.go2Socks5s.includes(atob('YWxsIGlu'))||AppParam.go2Socks5s.includes(atob('Kg=='))) socks5List += `${decodeURIComponent('%E6%89%80%E6%9C%89%E6%B5%81%E9%87%8F')}\\n`;\r\n\t\t\t\telse socks5List += `\\n  ${AppParam.go2Socks5s.join('\\n  ')}\\n`;\r\n\t\t\t}\r\n\r\n\t\t\tlet \u8BA2\u9605\u5668 = '';\r\n\t\t\tif (!sub || sub == '') {\r\n\t\t\t\tif (AppParam.enableSocks) \u8BA2\u9605\u5668 += `CFCDN\uFF08\u8BBF\u95EE\u65B9\u5F0F\uFF09: Socks5\\n  ${newSocks5s.join('\\n  ')}\\n${socks5List}`;\r\n\t\t\t\telse if (AppParam.proxyIP && AppParam.proxyIP != '') \u8BA2\u9605\u5668 += `CFCDN\uFF08\u8BBF\u95EE\u65B9\u5F0F\uFF09: ProxyIP\\n  ${AppParam.proxyIPs.join('\\n  ')}\\n`;\r\n\t\t\t\telse \u8BA2\u9605\u5668 += `CFCDN\uFF08\u8BBF\u95EE\u65B9\u5F0F\uFF09: \u65E0\u6CD5\u8BBF\u95EE, \u9700\u8981\u60A8\u8BBE\u7F6E proxyIP/PROXYIP \uFF01\uFF01\uFF01\\n`;\r\n\t\t\t\t\u8BA2\u9605\u5668 += `\\n\u60A8\u7684\u8BA2\u9605\u5185\u5BB9\u7531 \u5185\u7F6E addresses/ADD* \u53C2\u6570\u53D8\u91CF\u63D0\u4F9B\\n`;\r\n\t\t\t\tif (AppParam.addresses.length > 0) \u8BA2\u9605\u5668 += `ADD\uFF08TLS\u4F18\u9009\u57DF\u540D&IP\uFF09: \\n  ${AppParam.addresses.join('\\n  ')}\\n`;\r\n\t\t\t\tif (AppParam.addressesnotls.length > 0) \u8BA2\u9605\u5668 += `ADDNOTLS\uFF08noTLS\u4F18\u9009\u57DF\u540D&IP\uFF09: \\n  ${AppParam.addressesnotls.join('\\n  ')}\\n`;\r\n\t\t\t\tif (AppParam.addressesapi.length > 0) \u8BA2\u9605\u5668 += `ADDAPI\uFF08TLS\u4F18\u9009\u57DF\u540D&IP \u7684 API\uFF09: \\n  ${AppParam.addressesapi.join('\\n  ')}\\n`;\r\n\t\t\t\tif (AppParam.addressesnotlsapi.length > 0) \u8BA2\u9605\u5668 += `ADDNOTLSAPI\uFF08noTLS\u4F18\u9009\u57DF\u540D&IP \u7684 API\uFF09: \\n  ${AppParam.addressesnotlsapi.join('\\n  ')}\\n`;\r\n\t\t\t\tif (AppParam.addressescsv.length > 0) \u8BA2\u9605\u5668 += `ADDCSV\uFF08IPTest\u6D4B\u901Fcsv\u6587\u4EF6 \u9650\u901F ${AppParam.DLS} \uFF09: \\n  ${AppParam.addressescsv.join('\\n  ')}\\n`;\r\n\t\t\t} else {\r\n\t\t\t\tif (AppParam.enableSocks) \u8BA2\u9605\u5668 += `CFCDN\uFF08\u8BBF\u95EE\u65B9\u5F0F\uFF09: Socks5\\n  ${newSocks5s.join('\\n  ')}\\n${socks5List}`;\r\n\t\t\t\telse if (AppParam.proxyIP && AppParam.proxyIP != '') \u8BA2\u9605\u5668 += `CFCDN\uFF08\u8BBF\u95EE\u65B9\u5F0F\uFF09: ProxyIP\\n  ${AppParam.proxyIPs.join('\\n  ')}\\n`;\r\n\t\t\t\telse if (RproxyIP == 'true') \u8BA2\u9605\u5668 += `CFCDN\uFF08\u8BBF\u95EE\u65B9\u5F0F\uFF09: \u81EA\u52A8\u83B7\u53D6ProxyIP\\n`;\r\n\t\t\t\telse \u8BA2\u9605\u5668 += `CFCDN\uFF08\u8BBF\u95EE\u65B9\u5F0F\uFF09: \u65E0\u6CD5\u8BBF\u95EE, \u9700\u8981\u60A8\u8BBE\u7F6E proxyIP/PROXYIP \uFF01\uFF01\uFF01\\n`\r\n\t\t\t\t\u8BA2\u9605\u5668 += `\\nSUB\uFF08\u4F18\u9009\u8BA2\u9605\u751F\u6210\u5668\uFF09: ${sub}`;\r\n\t\t\t}\r\n\r\n\t\t\treturn `\r\n################################################################\r\nSubscribe / sub \u8BA2\u9605\u5730\u5740, \u652F\u6301 Base64\u3001clash-meta\u3001sing-box \u8BA2\u9605\u683C\u5F0F\r\n---------------------------------------------------------------\r\n\u5FEB\u901F\u81EA\u9002\u5E94\u8BA2\u9605\u5730\u5740:\r\nhttps://${proxyhost}${hostName}/${userID}\r\nhttps://${proxyhost}${hostName}/${userID}?sub\r\n\r\nBase64\u8BA2\u9605\u5730\u5740:\r\nhttps://${proxyhost}${hostName}/${userID}?b64\r\nhttps://${proxyhost}${hostName}/${userID}?base64\r\n\r\nclash\u8BA2\u9605\u5730\u5740:\r\nhttps://${proxyhost}${hostName}/${userID}?clash\r\n\r\nsingbox\u8BA2\u9605\u5730\u5740:\r\nhttps://${proxyhost}${hostName}/${userID}?sb\r\nhttps://${proxyhost}${hostName}/${userID}?singbox\r\n---------------------------------------------------------------\r\n################################################################\r\n${AppParam.FileName} \u914D\u7F6E\u4FE1\u606F\r\n---------------------------------------------------------------\r\nHOST: ${hostName}\r\nUUID: ${userID}\r\nFKID: ${AppParam.fakeUserID}\r\nUA: ${UA}\r\n\r\n${\u8BA2\u9605\u5668}\r\nSUBAPI\uFF08\u8BA2\u9605\u8F6C\u6362\u540E\u7AEF\uFF09: ${AppParam.subProtocol}://${AppParam.subconverter}\r\nSUBCONFIG\uFF08\u8BA2\u9605\u8F6C\u6362\u914D\u7F6E\u6587\u4EF6\uFF09: ${AppParam.subconfig}\r\n---------------------------------------------------------------\r\n################################################################\r\nv2ray\r\n---------------------------------------------------------------\r\n${v2ray}\r\n---------------------------------------------------------------\r\n################################################################\r\nclash-meta\r\n---------------------------------------------------------------\r\n${clash}\r\n---------------------------------------------------------------\r\n################################################################\r\ntelegram \u4EA4\u6D41\u7FA4 \u6280\u672F\u5927\u4F6C~\u5728\u7EBF\u53D1\u724C!\r\nhttps://t.me/CMLiussss\r\n---------------------------------------------------------------\r\ngithub \u9879\u76EE\u5730\u5740 Star!Star!Star!!!\r\nhttps://github.com/cmliu/edgetunnel\r\n---------------------------------------------------------------\r\n################################################################\r\n`;\r\n\t\t} else {\r\n\t\t\tif (typeof fetch != 'function') {\r\n\t\t\t\treturn 'Error: fetch is not available in this environment.';\r\n\t\t\t}\r\n\r\n\t\t\tlet newAddressesapi  = [];\r\n\t\t\tlet newAddressescsv = [];\r\n\t\t\tlet newAddressesnotlsapi = [];\r\n\t\t\tlet newAddressesnotlscsv = [];\r\n\r\n\t\t\t// \u5982\u679C\u662F\u4F7F\u7528\u9ED8\u8BA4\u57DF\u540D\uFF0C\u5219\u6539\u6210\u4E00\u4E2Aworkers\u7684\u57DF\u540D\uFF0C\u8BA2\u9605\u5668\u4F1A\u52A0\u4E0A\u4EE3\u7406\r\n\t\t\tif (hostName.includes(\".workers.dev\")){\r\n\t\t\t\tAppParam.noTLS = 'true';\r\n\t\t\t\tAppParam.fakeHostName = `${AppParam.fakeHostName}.workers.dev`;\r\n\t\t\t\tnewAddressesnotlsapi = await this.getAddressesapi(AppParam.addressesnotlsapi);\r\n\t\t\t\tnewAddressesnotlscsv = await this.getAddressescsv('FALSE');\r\n\t\t\t} else if (hostName.includes(\".pages.dev\")){\r\n\t\t\t\tAppParam.fakeHostName = `${AppParam.fakeHostName}.pages.dev`;\r\n\t\t\t} else if (hostName.includes(\"worker\") || hostName.includes(\"notls\") || AppParam.noTLS == 'true'){\r\n\t\t\t\tAppParam.noTLS = 'true';\r\n\t\t\t\tAppParam.fakeHostName = `notls${AppParam.fakeHostName}.net`;\r\n\t\t\t\tnewAddressesnotlsapi = await this.getAddressesapi(AppParam.addressesnotlsapi);\r\n\t\t\t\tnewAddressesnotlscsv = await this.getAddressescsv('FALSE');\r\n\t\t\t} else {\r\n\t\t\t\tAppParam.fakeHostName = `${AppParam.fakeHostName}.xyz`\r\n\t\t\t}\r\n\t\t\t// console.log(`\u865A\u5047HOST: ${AppParam.fakeHostName}`);\r\n\t\t\tlet protocol1 = AppParam.subProtocol;\r\n\t\t\tif(sub.includes(\"localhost\")){\r\n\t\t\t\tprotocol1 = AppParam.subProtocol2;\r\n\t\t\t}\r\n\t\t\tlet url = `${protocol1}://${sub}/sub?host=${AppParam.fakeHostName}&uuid=${AppParam.fakeUserID}&edgetunnel=cmliu&proxyip=${RproxyIP}`;\r\n\t\t\tlet isBase64 = true;\r\n\r\n\t\t\tif (!sub || sub == \"\"){\r\n\t\t\t\tif(hostName.includes('workers.dev') || hostName.includes('pages.dev')) {\r\n\t\t\t\t\tif (AppParam.proxyhostsURL && (!AppParam.proxyhosts || AppParam.proxyhosts.length == 0)) {\r\n\t\t\t\t\t\ttry {\r\n\t\t\t\t\t\t\tconst response = await fetch(AppParam.proxyhostsURL);\r\n\r\n\t\t\t\t\t\t\tif (!response.ok) {\r\n\t\t\t\t\t\t\t\tconsole.error('\u83B7\u53D6\u5730\u5740\u65F6\u51FA\u9519:', response.status, response.statusText);\r\n\t\t\t\t\t\t\t\treturn; // \u5982\u679C\u6709\u9519\u8BEF\uFF0C\u76F4\u63A5\u8FD4\u56DE\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tconst text = await response.text();\r\n\t\t\t\t\t\t\tconst lines = text.split('\\n');\r\n\t\t\t\t\t\t\t// \u8FC7\u6EE4\u6389\u7A7A\u884C\u6216\u53EA\u5305\u542B\u7A7A\u767D\u5B57\u7B26\u7684\u884C\r\n\t\t\t\t\t\t\tconst nonEmptyLines = lines.filter(line => line.trim() !== '');\r\n\r\n\t\t\t\t\t\t\tAppParam.proxyhosts = AppParam.proxyhosts.concat(nonEmptyLines);\r\n\t\t\t\t\t\t} catch (error) {\r\n\t\t\t\t\t\t\tconsole.error('\u83B7\u53D6\u5730\u5740\u65F6\u51FA\u9519:', error);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\t// \u4F7F\u7528Set\u5BF9\u8C61\u53BB\u91CD\r\n\t\t\t\t\tAppParam.proxyhosts = [...new Set(AppParam.proxyhosts)];\r\n\t\t\t\t}\r\n\r\n\t\t\t\tnewAddressesapi = await this.getAddressesapi(AppParam.addressesapi);\r\n\t\t\t\tnewAddressescsv = await this.getAddressescsv('TRUE');\r\n\t\t\t\tlet protocol = CommonUtils.isLocalHost(hostName) ? AppParam.subProtocol2 : AppParam.subProtocol;\r\n\r\n\t\t\t\turl = `${protocol}://${hostName}/${AppParam.fakeUserID}`;\r\n\t\t\t\tif (hostName.includes(\"worker\") || hostName.includes(\"notls\") || AppParam.noTLS == 'true') url += '?notls';\r\n\t\t\t\t// console.log(`\u865A\u5047\u8BA2\u9605: ${url}`);\r\n\t\t\t}\r\n\r\n\t\t\tif (!userAgent.includes(('CF-Workers-SUB').toLowerCase())){\r\n\t\t\t\tlet protocol = AppParam.subProtocol;\r\n\t\t\t\tif(AppParam.subconverter.includes('localhost')){\r\n\t\t\t\t\tprotocol = AppParam.subProtocol2;\r\n\t\t\t\t}\r\n\t\t\t\tif ((userAgent.includes('clash') && !userAgent.includes('nekobox')) || ( _url.searchParams.has('clash') && !userAgent.includes('subconverter'))) {\r\n\t\t\t\t\turl = `${protocol}://${AppParam.subconverter}/sub?target=clash&url=${encodeURIComponent(url)}&insert=false&config=${encodeURIComponent(AppParam.subconfig)}&emoji=true&list=false&tfo=false&scv=true&fdn=false&sort=false&new_name=true`;\r\n\t\t\t\t\tisBase64 = false;\r\n\t\t\t\t} else if (userAgent.includes('sing-box') || userAgent.includes('singbox') || (( _url.searchParams.has('singbox') || _url.searchParams.has('sb')) && !userAgent.includes('subconverter'))) {\r\n\t\t\t\t\turl = `${protocol}://${AppParam.subconverter}/sub?target=singbox&url=${encodeURIComponent(url)}&insert=false&config=${encodeURIComponent(AppParam.subconfig)}&emoji=true&list=false&tfo=false&scv=true&fdn=false&sort=false&new_name=true`;\r\n\t\t\t\t\tisBase64 = false;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\ttry {\r\n\t\t\t\tlet content;\r\n\t\t\t\tif ((!sub || sub == \"\") && isBase64 == true) {\r\n\t\t\t\t\tcontent = await this.subAddresses(AppParam.fakeHostName,AppParam.fakeUserID,AppParam.noTLS,newAddressesapi,newAddressescsv,newAddressesnotlsapi,newAddressesnotlscsv);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tconst response = await fetch(url);\r\n\t\t\t\t\tcontent = await response.text();\r\n\t\t\t\t}\r\n\t\t\t\tif (_url.pathname == `/${AppParam.fakeUserID}`) return content;\r\n\r\n\t\t\t\treturn CommonUtils.revertFakeInfo(content, userID, hostName, isBase64);\r\n\r\n\t\t\t} catch (error) {\r\n\t\t\t\tconsole.error('Error fetching content:', error);\r\n\t\t\t\t// @ts-ignore\r\n\t\t\t\treturn `Error fetching content: ${error.message}`;\r\n\t\t\t}\r\n\r\n\t\t}\r\n\t}\r\n\r\n  static async getAccountId(email, key) {\r\n\t\ttry {\r\n\t\t\tconst url = 'https://api.cloudflare.com/client/v4/accounts';\r\n\t\t\tconst headers = new Headers({\r\n\t\t\t\t'X-AUTH-EMAIL': email,\r\n\t\t\t\t'X-AUTH-KEY': key\r\n\t\t\t});\r\n\t\t\tconst response = await fetch(url, { headers });\r\n\t\t\tconst data = await response.json();\r\n\t\t\t// @ts-ignore\r\n\t\t\treturn data.result[0].id; // \u5047\u8BBE\u6211\u4EEC\u9700\u8981\u7B2C\u4E00\u4E2A\u8D26\u53F7ID\r\n\t\t} catch (error) {\r\n\t\t\treturn false ;\r\n\t\t}\r\n\t}\r\n\r\n\tstatic async getSum(accountId, accountIndex, email, key, startDate, endDate) {\r\n\t\ttry {\r\n\t\t\tconst startDateISO = new Date(startDate).toISOString();\r\n\t\t\tconst endDateISO = new Date(endDate).toISOString();\r\n\r\n\t\t\tconst query = JSON.stringify({\r\n\t\t\t\tquery: `query getBillingMetrics($accountId: String!, $filter: AccountWorkersInvocationsAdaptiveFilter_InputObject) {\r\n\t\t\t\tviewer {\r\n\t\t\t\t\taccounts(filter: {accountTag: $accountId}) {\r\n\t\t\t\t\t\tpagesFunctionsInvocationsAdaptiveGroups(limit: 1000, filter: $filter) {\r\n\t\t\t\t\t\t\tsum {\r\n\t\t\t\t\t\t\t\trequests\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tworkersInvocationsAdaptive(limit: 10000, filter: $filter) {\r\n\t\t\t\t\t\t\tsum {\r\n\t\t\t\t\t\t\t\trequests\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}`,\r\n\t\t\t\tvariables: {\r\n\t\t\t\t\taccountId,\r\n\t\t\t\t\tfilter: { datetime_geq: startDateISO, datetime_leq: endDateISO }\r\n\t\t\t\t},\r\n\t\t\t});\r\n\r\n\t\t\tconst headers = new Headers({\r\n\t\t\t\t'Content-Type': 'application/json',\r\n\t\t\t\t'X-AUTH-EMAIL': email,\r\n\t\t\t\t'X-AUTH-KEY': key,\r\n\t\t\t});\r\n\r\n\t\t\tconst response = await fetch(`https://api.cloudflare.com/client/v4/graphql`, {\r\n\t\t\t\tmethod: 'POST',\r\n\t\t\t\theaders: headers,\r\n\t\t\t\tbody: query\r\n\t\t\t});\r\n\r\n\t\t\tif (!response.ok) {\r\n\t\t\t\tthrow new Error(`HTTP error! status: ${response.status}`);\r\n\t\t\t}\r\n\r\n\t\t\tconst res = await response.json();\r\n\r\n\t\t\t// @ts-ignore\r\n\t\t\tconst pagesFunctionsInvocationsAdaptiveGroups = res?.data?.viewer?.accounts?.[accountIndex]?.pagesFunctionsInvocationsAdaptiveGroups;\r\n\t\t\t// @ts-ignore\r\n\t\t\tconst workersInvocationsAdaptive = res?.data?.viewer?.accounts?.[accountIndex]?.workersInvocationsAdaptive;\r\n\r\n\t\t\tif (!pagesFunctionsInvocationsAdaptiveGroups && !workersInvocationsAdaptive) {\r\n\t\t\t\tthrow new Error('\u627E\u4E0D\u5230\u6570\u636E');\r\n\t\t\t}\r\n\r\n\t\t\tconst pagesSum = pagesFunctionsInvocationsAdaptiveGroups.reduce((a, b) => a + b?.sum.requests, 0);\r\n\t\t\tconst workersSum = workersInvocationsAdaptive.reduce((a, b) => a + b?.sum.requests, 0);\r\n\r\n\t\t\t//console.log(`\u8303\u56F4: ${startDateISO} ~ ${endDateISO}\\n\u9ED8\u8BA4\u53D6\u7B2C ${accountIndex} \u9879`);\r\n\r\n\t\t\treturn [pagesSum, workersSum ];\r\n\t\t} catch (error) {\r\n\t\t\treturn [ 0,0 ];\r\n\t\t}\r\n\t}\r\n\r\n\tstatic async getAddressesapi(api) {\r\n\t\tif (!api || api.length === 0) {\r\n\t\t\treturn [];\r\n\t\t}\r\n\r\n\t\tlet newapi = \"\";\r\n\r\n\t\t// \u521B\u5EFA\u4E00\u4E2AAbortController\u5BF9\u8C61\uFF0C\u7528\u4E8E\u63A7\u5236fetch\u8BF7\u6C42\u7684\u53D6\u6D88\r\n\t\tconst controller = new AbortController();\r\n\r\n\t\tconst timeout = setTimeout(() => {\r\n\t\t\tcontroller.abort(); // \u53D6\u6D88\u6240\u6709\u8BF7\u6C42\r\n\t\t}, 2000); // 2\u79D2\u540E\u89E6\u53D1\r\n\r\n\t\ttry {\r\n\t\t\t// \u4F7F\u7528Promise.allSettled\u7B49\u5F85\u6240\u6709API\u8BF7\u6C42\u5B8C\u6210\uFF0C\u65E0\u8BBA\u6210\u529F\u6216\u5931\u8D25\r\n\t\t\t// \u5BF9api\u6570\u7EC4\u8FDB\u884C\u904D\u5386\uFF0C\u5BF9\u6BCF\u4E2AAPI\u5730\u5740\u53D1\u8D77fetch\u8BF7\u6C42\r\n\t\t\tconst responses = await Promise.allSettled(api.map(apiUrl => fetch(apiUrl, {\r\n\t\t\t\tmethod: 'get',\r\n\t\t\t\theaders: {\r\n\t\t\t\t\t'Accept': 'text/html,application/xhtml+xml,application/xml;',\r\n\t\t\t\t\t'User-Agent': 'CF-Workers-edgetunnel/cmliu'\r\n\t\t\t\t},\r\n\t\t\t\tsignal: controller.signal // \u5C06AbortController\u7684\u4FE1\u53F7\u91CF\u6DFB\u52A0\u5230fetch\u8BF7\u6C42\u4E2D\uFF0C\u4EE5\u4FBF\u4E8E\u9700\u8981\u65F6\u53EF\u4EE5\u53D6\u6D88\u8BF7\u6C42\r\n\t\t\t}).then(response => response.ok ? response.text() : Promise.reject())));\r\n\r\n\t\t\t// \u904D\u5386\u6240\u6709\u54CD\u5E94\r\n\t\t\tfor (const response of responses) {\r\n\t\t\t\t// \u68C0\u67E5\u54CD\u5E94\u72B6\u6001\u662F\u5426\u4E3A'fulfilled'\uFF0C\u5373\u8BF7\u6C42\u6210\u529F\u5B8C\u6210\r\n\t\t\t\tif (response.status === 'fulfilled') {\r\n\t\t\t\t\t// \u83B7\u53D6\u54CD\u5E94\u7684\u5185\u5BB9\r\n\t\t\t\t\tconst content = await response.value;\r\n\t\t\t\t\tnewapi += content + '\\n';\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t} catch (error) {\r\n\t\t\tconsole.error(error);\r\n\t\t} finally {\r\n\t\t\t// \u65E0\u8BBA\u6210\u529F\u6216\u5931\u8D25\uFF0C\u6700\u540E\u90FD\u6E05\u9664\u8BBE\u7F6E\u7684\u8D85\u65F6\u5B9A\u65F6\u5668\r\n\t\t\tclearTimeout(timeout);\r\n\t\t}\r\n\r\n\t\tconst newAddressesapi = await this.ADD(newapi);\r\n\r\n\t\t// \u8FD4\u56DE\u5904\u7406\u540E\u7684\u7ED3\u679C\r\n\t\treturn newAddressesapi;\r\n\t}\r\n\r\n\tstatic async getAddressescsv(tls) {\r\n\t\tif (!AppParam.addressescsv || AppParam.addressescsv.length === 0) {\r\n\t\t\treturn [];\r\n\t\t}\r\n\r\n\t\tlet newAddressescsv = [];\r\n\r\n\t\tfor (const csvUrl of AppParam.addressescsv) {\r\n\t\t\ttry {\r\n\t\t\t\tconst response = await fetch(csvUrl);\r\n\r\n\t\t\t\tif (!response.ok) {\r\n\t\t\t\t\tconsole.error('\u83B7\u53D6CSV\u5730\u5740\u65F6\u51FA\u9519:', response.status, response.statusText);\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tconst text = await response.text();// \u4F7F\u7528\u6B63\u786E\u7684\u5B57\u7B26\u7F16\u7801\u89E3\u6790\u6587\u672C\u5185\u5BB9\r\n\t\t\t\tlet lines;\r\n\t\t\t\tif (text.includes('\\r\\n')){\r\n\t\t\t\t\tlines = text.split('\\r\\n');\r\n\t\t\t\t} else {\r\n\t\t\t\t\tlines = text.split('\\n');\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// \u68C0\u67E5CSV\u5934\u90E8\u662F\u5426\u5305\u542B\u5FC5\u9700\u5B57\u6BB5\r\n\t\t\t\tconst header = lines[0].split(',');\r\n\t\t\t\tconst tlsIndex = header.indexOf('TLS');\r\n\r\n\t\t\t\tconst ipAddressIndex = 0;// IP\u5730\u5740\u5728 CSV \u5934\u90E8\u7684\u4F4D\u7F6E\r\n\t\t\t\tconst portIndex = 1;// \u7AEF\u53E3\u5728 CSV \u5934\u90E8\u7684\u4F4D\u7F6E\r\n\t\t\t\tconst dataCenterIndex = tlsIndex + 1; // \u6570\u636E\u4E2D\u5FC3\u662F TLS \u7684\u540E\u4E00\u4E2A\u5B57\u6BB5\r\n\r\n\t\t\t\tif (tlsIndex === -1) {\r\n\t\t\t\t\tconsole.error('CSV\u6587\u4EF6\u7F3A\u5C11\u5FC5\u9700\u7684\u5B57\u6BB5');\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// \u4ECE\u7B2C\u4E8C\u884C\u5F00\u59CB\u904D\u5386CSV\u884C\r\n\t\t\t\tfor (let i = 1; i < lines.length; i++) {\r\n\t\t\t\t\tconst columns = lines[i].split(',');\r\n\t\t\t\t\tconst speedIndex = columns.length - 1; // \u6700\u540E\u4E00\u4E2A\u5B57\u6BB5\r\n\t\t\t\t\t// \u68C0\u67E5TLS\u662F\u5426\u4E3A\"TRUE\"\u4E14\u901F\u5EA6\u5927\u4E8EDLS\r\n\t\t\t\t\tif (columns[tlsIndex].toUpperCase() === tls && parseFloat(columns[speedIndex]) > AppParam.DLS) {\r\n\t\t\t\t\t\tconst ipAddress = columns[ipAddressIndex];\r\n\t\t\t\t\t\tconst port = columns[portIndex];\r\n\t\t\t\t\t\tconst dataCenter = columns[dataCenterIndex];\r\n\r\n\t\t\t\t\t\tconst formattedAddress = `${ipAddress}:${port}#${dataCenter}`;\r\n\t\t\t\t\t\tnewAddressescsv.push(formattedAddress);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t} catch (error) {\r\n\t\t\t\tconsole.error('\u83B7\u53D6CSV\u5730\u5740\u65F6\u51FA\u9519:', error);\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn newAddressescsv;\r\n\t}\r\n\r\n\tstatic subAddresses(host, UUID, noTLS, newAddressesapi, newAddressescsv, newAddressesnotlsapi , newAddressesnotlscsv) {\r\n\t\tconst regex = /^(\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}|\\[.*\\]):?(\\d+)?#?(.*)?$/;\r\n\t\tAppParam.addresses = AppParam.addresses.concat(newAddressesapi);\r\n\t\tAppParam.addresses = AppParam.addresses.concat(newAddressescsv);\r\n\t\tlet notlsresponseBody ;\r\n\t\tif (noTLS == 'true'){\r\n\t\t\tAppParam.addressesnotls = AppParam.addressesnotls.concat(newAddressesnotlsapi);\r\n\t\t\tAppParam.addressesnotls = AppParam.addressesnotls.concat(newAddressesnotlscsv);\r\n\t\t\tconst uniqueAddressesnotls = [...new Set(AppParam.addressesnotls)];\r\n\r\n\t\t\tnotlsresponseBody = uniqueAddressesnotls.map(address => {\r\n\t\t\t\tlet port = \"-1\";\r\n\t\t\t\tlet addressid = address;\r\n\r\n\t\t\t\tconst match = addressid.match(regex);\r\n\t\t\t\tif (!match) {\r\n\t\t\t\t\tif (address.includes(':') && address.includes('#')) {\r\n\t\t\t\t\t\tconst parts = address.split(':');\r\n\t\t\t\t\t\taddress = parts[0];\r\n\t\t\t\t\t\tconst subParts = parts[1].split('#');\r\n\t\t\t\t\t\tport = subParts[0];\r\n\t\t\t\t\t\taddressid = subParts[1];\r\n\t\t\t\t\t} else if (address.includes(':')) {\r\n\t\t\t\t\t\tconst parts = address.split(':');\r\n\t\t\t\t\t\taddress = parts[0];\r\n\t\t\t\t\t\tport = parts[1];\r\n\t\t\t\t\t} else if (address.includes('#')) {\r\n\t\t\t\t\t\tconst parts = address.split('#');\r\n\t\t\t\t\t\taddress = parts[0];\r\n\t\t\t\t\t\taddressid = parts[1];\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (addressid.includes(':')) {\r\n\t\t\t\t\t\taddressid = addressid.split(':')[0];\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\taddress = match[1];\r\n\t\t\t\t\tport = match[2] || port;\r\n\t\t\t\t\taddressid = match[3] || address;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tconst httpPorts = [\"8080\",\"8880\",\"2052\",\"2082\",\"2086\",\"2095\"];\r\n\t\t\t\tif (!CommonUtils.isValidIPv4(address) && port == \"-1\") {\r\n\t\t\t\t\tfor (let httpPort of httpPorts) {\r\n\t\t\t\t\t\tif (address.includes(httpPort)) {\r\n\t\t\t\t\t\t\tport = httpPort;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tif (port == \"-1\") port = \"80\";\r\n\r\n\t\t\t\tlet \u4F2A\u88C5\u57DF\u540D = host ;\r\n\t\t\t\tlet \u6700\u7EC8\u8DEF\u5F84 = '/?ed=2560' ;\r\n\t\t\t\tlet \u8282\u70B9\u5907\u6CE8 = '';\r\n\t\t\t\tconst \u534F\u8BAE\u7C7B\u578B = atob(\u5565\u5565\u5565_\u5199\u7684\u8FD9\u662F\u5565\u554A);\r\n\r\n\t\t\t\tconst vlessLink = `${\u534F\u8BAE\u7C7B\u578B}://${UUID}@${address}:${port}?encryption=none&security=&type=ws&host=${\u4F2A\u88C5\u57DF\u540D}&path=${encodeURIComponent(\u6700\u7EC8\u8DEF\u5F84)}#${encodeURIComponent(addressid + \u8282\u70B9\u5907\u6CE8)}`;\r\n\r\n\t\t\t\treturn vlessLink;\r\n\r\n\t\t\t}).join('\\n');\r\n\r\n\t\t}\r\n\r\n\t\t// \u4F7F\u7528Set\u5BF9\u8C61\u53BB\u91CD\r\n\t\tconst uniqueAddresses = [...new Set(AppParam.addresses)];\r\n\r\n\t\tconst responseBody = uniqueAddresses.map(address => {\r\n\t\t\tlet port = \"-1\";\r\n\t\t\tlet addressid = address;\r\n\r\n\t\t\tconst match = addressid.match(regex);\r\n\t\t\tif (!match) {\r\n\t\t\t\tif (address.includes(':') && address.includes('#')) {\r\n\t\t\t\t\tconst parts = address.split(':');\r\n\t\t\t\t\taddress = parts[0];\r\n\t\t\t\t\tconst subParts = parts[1].split('#');\r\n\t\t\t\t\tport = subParts[0];\r\n\t\t\t\t\taddressid = subParts[1];\r\n\t\t\t\t} else if (address.includes(':')) {\r\n\t\t\t\t\tconst parts = address.split(':');\r\n\t\t\t\t\taddress = parts[0];\r\n\t\t\t\t\tport = parts[1];\r\n\t\t\t\t} else if (address.includes('#')) {\r\n\t\t\t\t\tconst parts = address.split('#');\r\n\t\t\t\t\taddress = parts[0];\r\n\t\t\t\t\taddressid = parts[1];\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (addressid.includes(':')) {\r\n\t\t\t\t\taddressid = addressid.split(':')[0];\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\taddress = match[1];\r\n\t\t\t\tport = match[2] || port;\r\n\t\t\t\taddressid = match[3] || address;\r\n\t\t\t}\r\n\r\n\t\t\tconst httpsPorts = [\"2053\",\"2083\",\"2087\",\"2096\",\"8443\"];\r\n\t\t\tif (!CommonUtils.isValidIPv4(address) && port == \"-1\") {\r\n\t\t\t\tfor (let httpsPort of httpsPorts) {\r\n\t\t\t\t\tif (address.includes(httpsPort)) {\r\n\t\t\t\t\t\tport = httpsPort;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (port == \"-1\") port = \"443\";\r\n\r\n\t\t\tlet \u4F2A\u88C5\u57DF\u540D = host ;\r\n\t\t\tlet \u6700\u7EC8\u8DEF\u5F84 = '/?ed=2560' ;\r\n\t\t\tlet \u8282\u70B9\u5907\u6CE8 = '';\r\n\r\n\t\t\tif(AppParam.proxyhosts.length > 0 && (\u4F2A\u88C5\u57DF\u540D.includes('.workers.dev') || \u4F2A\u88C5\u57DF\u540D.includes('pages.dev'))) {\r\n\t\t\t\t\u6700\u7EC8\u8DEF\u5F84 = `/${\u4F2A\u88C5\u57DF\u540D}${\u6700\u7EC8\u8DEF\u5F84}`;\r\n\t\t\t\t\u4F2A\u88C5\u57DF\u540D = AppParam.proxyhosts[Math.floor(Math.random() * AppParam.proxyhosts.length)];\r\n\t\t\t\t\u8282\u70B9\u5907\u6CE8 = ` \u5DF2\u542F\u7528\u4E34\u65F6\u57DF\u540D\u4E2D\u8F6C\u670D\u52A1\uFF0C\u8BF7\u5C3D\u5FEB\u7ED1\u5B9A\u81EA\u5B9A\u4E49\u57DF\uFF01`;\r\n\t\t\t}\r\n\r\n\t\t\tconst \u534F\u8BAE\u7C7B\u578B = atob(\u5565\u5565\u5565_\u5199\u7684\u8FD9\u662F\u5565\u554A);\r\n\t\t\tconst vlessLink = `${\u534F\u8BAE\u7C7B\u578B}://${UUID}@${address}:${port}?encryption=none&security=tls&sni=${\u4F2A\u88C5\u57DF\u540D}&fp=random&type=ws&host=${\u4F2A\u88C5\u57DF\u540D}&path=${encodeURIComponent(\u6700\u7EC8\u8DEF\u5F84)}#${encodeURIComponent(addressid + \u8282\u70B9\u5907\u6CE8)}`;\r\n\r\n\t\t\treturn vlessLink;\r\n\t\t}).join('\\n');\r\n\r\n\t\tlet base64Response = responseBody; // \u91CD\u65B0\u8FDB\u884C Base64 \u7F16\u7801\r\n\t\tif(noTLS == 'true') base64Response += `\\n${notlsresponseBody}`;\r\n\t\treturn btoa(base64Response);\r\n\t\t// return CommonUtils.urlSafeBase64Encode(base64Response)\r\n\t}\r\n\r\n}\r\n", "import AppParam from './AppParam';\r\nimport CommonUtils from '../utils/CommonUtils';\r\nimport { connect } from 'cloudflare:sockets';\r\n\r\nconst WS_READY_STATE_OPEN = 1;     // WebSocket \u5904\u4E8E\u5F00\u653E\u72B6\u6001\uFF0C\u53EF\u4EE5\u53D1\u9001\u548C\u63A5\u6536\u6D88\u606F\r\nconst WS_READY_STATE_CLOSING = 2;  // WebSocket \u6B63\u5728\u5173\u95ED\u8FC7\u7A0B\u4E2D\r\n\r\n/**\r\n * \u5904\u7406 VLESS over WebSocket \u7684\u8BF7\u6C42\r\n * @param {import(\"@cloudflare/workers-types\").Request} request\r\n */\r\nexport async function vlessOverWSHandler(request) {\r\n\r\n\t/** @type {import(\"@cloudflare/workers-types\").WebSocket[]} */\r\n\t\t// @ts-ignore\r\n\tconst webSocketPair = new WebSocketPair();\r\n\tconst [client, webSocket] = Object.values(webSocketPair);\r\n\r\n\t// \u63A5\u53D7 WebSocket \u8FDE\u63A5\r\n\twebSocket.accept();\r\n\r\n\r\n\tlet address = '';\r\n\tlet portWithRandomLog = '';\r\n\r\n\tconst log = (/** @type {string} */ info, /** @type {string | undefined} */ event) => {\r\n\t\tconsole.log(`[${address}:${portWithRandomLog}] ${info}`, event || '');\r\n\t};\r\n\r\n\t// \u83B7\u53D6\u65E9\u671F\u6570\u636E\u5934\u90E8\uFF0C\u53EF\u80FD\u5305\u542B\u4E86\u4E00\u4E9B\u521D\u59CB\u5316\u6570\u636E\r\n\tconst earlyDataHeader = request.headers.get('sec-websocket-protocol') || '';\r\n\r\n\t// \u521B\u5EFA\u4E00\u4E2A\u53EF\u8BFB\u7684 WebSocket \u6D41\uFF0C\u7528\u4E8E\u63A5\u6536\u5BA2\u6237\u7AEF\u6570\u636E\r\n\tconst readableWebSocketStream = makeReadableWebSocketStream(webSocket, earlyDataHeader, log);\r\n\r\n\t/** @type {{ value: import(\"@cloudflare/workers-types\").Socket | null}}*/\r\n\t\t// \u7528\u4E8E\u5B58\u50A8\u8FDC\u7A0B Socket \u7684\u5305\u88C5\u5668\r\n\tlet remoteSocketWapper = {\r\n\t\t\tvalue: null,\r\n\t\t};\r\n\t// \u6807\u8BB0\u662F\u5426\u4E3A DNS \u67E5\u8BE2\r\n\tlet isDns = false;\r\n\r\n\t// WebSocket \u6570\u636E\u6D41\u5411\u8FDC\u7A0B\u670D\u52A1\u5668\u7684\u7BA1\u9053\r\n\treadableWebSocketStream.pipeTo(new WritableStream({\r\n\t\tasync write(chunk, controller) {\r\n\t\t\tif (isDns) {\r\n\t\t\t\t// \u5982\u679C\u662F DNS \u67E5\u8BE2\uFF0C\u8C03\u7528 DNS \u5904\u7406\u51FD\u6570\r\n\t\t\t\treturn await handleDNSQuery(chunk, webSocket, null, log);\r\n\t\t\t}\r\n\t\t\tif (remoteSocketWapper.value) {\r\n\t\t\t\t// \u5982\u679C\u5DF2\u6709\u8FDC\u7A0B Socket\uFF0C\u76F4\u63A5\u5199\u5165\u6570\u636E\r\n\t\t\t\t// @ts-ignore\r\n\t\t\t\tconst writer = remoteSocketWapper.value.writable.getWriter()\r\n\t\t\t\tawait writer.write(chunk);\r\n\t\t\t\twriter.releaseLock();\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\t// \u5904\u7406 VLESS \u534F\u8BAE\u5934\u90E8\r\n\t\t\tconst {\r\n\t\t\t\thasError,\r\n\t\t\t\tmessage,\r\n\t\t\t\taddressType,\r\n\t\t\t\tportRemote = 443,\r\n\t\t\t\taddressRemote = '',\r\n\t\t\t\trawDataIndex,\r\n\t\t\t\tvlessVersion = new Uint8Array([0, 0]),\r\n\t\t\t\tisUDP,\r\n\t\t\t} = processVlessHeader(chunk, AppParam.userID);\r\n\t\t\t// \u8BBE\u7F6E\u5730\u5740\u548C\u7AEF\u53E3\u4FE1\u606F\uFF0C\u7528\u4E8E\u65E5\u5FD7\r\n\t\t\taddress = addressRemote;\r\n\t\t\tportWithRandomLog = `${portRemote}--${Math.random()} ${isUDP ? 'udp ' : 'tcp '} `;\r\n\t\t\tif (hasError) {\r\n\t\t\t\t// \u5982\u679C\u6709\u9519\u8BEF\uFF0C\u629B\u51FA\u5F02\u5E38\r\n\t\t\t\tthrow new Error(message);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\t// \u5982\u679C\u662F UDP \u4E14\u7AEF\u53E3\u4E0D\u662F DNS \u7AEF\u53E3\uFF0853\uFF09\uFF0C\u5219\u5173\u95ED\u8FDE\u63A5\r\n\t\t\tif (isUDP) {\r\n\t\t\t\tif (portRemote === 53) {\r\n\t\t\t\t\tisDns = true;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthrow new Error('UDP \u4EE3\u7406\u4EC5\u5BF9 DNS\uFF0853 \u7AEF\u53E3\uFF09\u542F\u7528');\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t// \u6784\u5EFA VLESS \u54CD\u5E94\u5934\u90E8\r\n\t\t\tconst vlessResponseHeader = new Uint8Array([vlessVersion[0], 0]);\r\n\t\t\t// \u83B7\u53D6\u5B9E\u9645\u7684\u5BA2\u6237\u7AEF\u6570\u636E\r\n\t\t\tconst rawClientData = chunk.slice(rawDataIndex);\r\n\r\n\t\t\tif (isDns) {\r\n\t\t\t\t// \u5982\u679C\u662F DNS \u67E5\u8BE2\uFF0C\u8C03\u7528 DNS \u5904\u7406\u51FD\u6570\r\n\t\t\t\treturn handleDNSQuery(rawClientData, webSocket, vlessResponseHeader, log);\r\n\t\t\t}\r\n\t\t\t// \u5904\u7406 TCP \u51FA\u7AD9\u8FDE\u63A5\r\n\t\t\tlog(`\u5904\u7406 TCP \u51FA\u7AD9\u8FDE\u63A5 ${addressRemote}:${portRemote}`, undefined);\r\n\t\t\thandleTCPOutBound(remoteSocketWapper, addressType, addressRemote, portRemote, rawClientData, webSocket, vlessResponseHeader, log);\r\n\t\t},\r\n\t\tclose() {\r\n\t\t\tlog(`readableWebSocketStream \u5DF2\u5173\u95ED`, undefined);\r\n\t\t},\r\n\t\tabort(reason) {\r\n\t\t\tlog(`readableWebSocketStream \u5DF2\u4E2D\u6B62`, JSON.stringify(reason));\r\n\t\t},\r\n\t})).catch((err) => {\r\n\t\tlog('readableWebSocketStream \u7BA1\u9053\u9519\u8BEF', err);\r\n\t});\r\n\r\n\t// \u8FD4\u56DE\u4E00\u4E2A WebSocket \u5347\u7EA7\u7684\u54CD\u5E94\r\n\treturn new Response(null, {\r\n\t\tstatus: 101,\r\n\t\t// @ts-ignore\r\n\t\twebSocket: client,\r\n\t});\r\n}\r\n\r\n\r\n\r\n/**\r\n * \u5C06 WebSocket \u8F6C\u6362\u4E3A\u53EF\u8BFB\u6D41\uFF08ReadableStream\uFF09\r\n * @param {import(\"@cloudflare/workers-types\").WebSocket} webSocketServer \u670D\u52A1\u5668\u7AEF\u7684 WebSocket \u5BF9\u8C61\r\n * @param {string} earlyDataHeader WebSocket 0-RTT\uFF08\u96F6\u5F80\u8FD4\u65F6\u95F4\uFF09\u7684\u65E9\u671F\u6570\u636E\u5934\u90E8\r\n * @param {(info: string)=> void} log \u65E5\u5FD7\u8BB0\u5F55\u51FD\u6570\uFF0C\u7528\u4E8E\u8BB0\u5F55 WebSocket 0-RTT \u76F8\u5173\u4FE1\u606F\r\n * @returns {ReadableStream} \u7531 WebSocket \u6D88\u606F\u7EC4\u6210\u7684\u53EF\u8BFB\u6D41\r\n */\r\nexport function makeReadableWebSocketStream(webSocketServer, earlyDataHeader, log ) {\r\n\t// \u6807\u8BB0\u53EF\u8BFB\u6D41\u662F\u5426\u5DF2\u88AB\u53D6\u6D88\r\n\tlet readableStreamCancel = false;\r\n\r\n\t// \u521B\u5EFA\u4E00\u4E2A\u65B0\u7684\u53EF\u8BFB\u6D41\r\n\tconst stream = new ReadableStream({\r\n\t\t// \u5F53\u6D41\u5F00\u59CB\u65F6\u7684\u521D\u59CB\u5316\u51FD\u6570\r\n\t\tstart(controller) {\r\n\t\t\t// \u76D1\u542C WebSocket \u7684\u6D88\u606F\u4E8B\u4EF6\r\n\t\t\twebSocketServer.addEventListener('message', (event) => {\r\n\t\t\t\t// \u5982\u679C\u6D41\u5DF2\u88AB\u53D6\u6D88\uFF0C\u4E0D\u518D\u5904\u7406\u65B0\u6D88\u606F\r\n\t\t\t\tif (readableStreamCancel) {\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\tconst message = event.data;\r\n\t\t\t\t// \u5C06\u6D88\u606F\u52A0\u5165\u6D41\u7684\u961F\u5217\u4E2D\r\n\t\t\t\tcontroller.enqueue(message);\r\n\t\t\t});\r\n\r\n\t\t\t// \u76D1\u542C WebSocket \u7684\u5173\u95ED\u4E8B\u4EF6\r\n\t\t\t// \u6CE8\u610F\uFF1A\u8FD9\u4E2A\u4E8B\u4EF6\u610F\u5473\u7740\u5BA2\u6237\u7AEF\u5173\u95ED\u4E86\u5BA2\u6237\u7AEF -> \u670D\u52A1\u5668\u7684\u6D41\r\n\t\t\t// \u4F46\u662F\uFF0C\u670D\u52A1\u5668 -> \u5BA2\u6237\u7AEF\u7684\u6D41\u4ECD\u7136\u6253\u5F00\uFF0C\u76F4\u5230\u5728\u670D\u52A1\u5668\u7AEF\u8C03\u7528 close()\r\n\t\t\t// WebSocket \u534F\u8BAE\u8981\u6C42\u5728\u6BCF\u4E2A\u65B9\u5411\u4E0A\u90FD\u8981\u53D1\u9001\u5355\u72EC\u7684\u5173\u95ED\u6D88\u606F\uFF0C\u4EE5\u5B8C\u5168\u5173\u95ED Socket\r\n\t\t\twebSocketServer.addEventListener('close', () => {\r\n\t\t\t\t// \u5BA2\u6237\u7AEF\u53D1\u9001\u4E86\u5173\u95ED\u4FE1\u53F7\uFF0C\u9700\u8981\u5173\u95ED\u670D\u52A1\u5668\u7AEF\r\n\t\t\t\tsafeCloseWebSocket(webSocketServer);\r\n\t\t\t\t// \u5982\u679C\u6D41\u672A\u88AB\u53D6\u6D88\uFF0C\u5219\u5173\u95ED\u63A7\u5236\u5668\r\n\t\t\t\tif (readableStreamCancel) {\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\tcontroller.close();\r\n\t\t\t});\r\n\r\n\t\t\t// \u76D1\u542C WebSocket \u7684\u9519\u8BEF\u4E8B\u4EF6\r\n\t\t\twebSocketServer.addEventListener('error', (err) => {\r\n\t\t\t\tlog('WebSocket \u670D\u52A1\u5668\u53D1\u751F\u9519\u8BEF');\r\n\t\t\t\t// \u5C06\u9519\u8BEF\u4F20\u9012\u7ED9\u63A7\u5236\u5668\r\n\t\t\t\tcontroller.error(err);\r\n\t\t\t});\r\n\r\n\t\t\t// \u5904\u7406 WebSocket 0-RTT\uFF08\u96F6\u5F80\u8FD4\u65F6\u95F4\uFF09\u7684\u65E9\u671F\u6570\u636E\r\n\t\t\t// 0-RTT \u5141\u8BB8\u5728\u5B8C\u5168\u5EFA\u7ACB\u8FDE\u63A5\u4E4B\u524D\u53D1\u9001\u6570\u636E\uFF0C\u63D0\u9AD8\u4E86\u6548\u7387\r\n\t\t\tconst { earlyData, error } = CommonUtils.base64ToArrayBuffer(earlyDataHeader);\r\n\t\t\tif (error) {\r\n\t\t\t\t// \u5982\u679C\u89E3\u7801\u65E9\u671F\u6570\u636E\u65F6\u51FA\u9519\uFF0C\u5C06\u9519\u8BEF\u4F20\u9012\u7ED9\u63A7\u5236\u5668\r\n\t\t\t\tcontroller.error(error);\r\n\t\t\t} else if (earlyData) {\r\n\t\t\t\t// \u5982\u679C\u6709\u65E9\u671F\u6570\u636E\uFF0C\u5C06\u5176\u52A0\u5165\u6D41\u7684\u961F\u5217\u4E2D\r\n\t\t\t\tcontroller.enqueue(earlyData);\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t// \u5F53\u4F7F\u7528\u8005\u4ECE\u6D41\u4E2D\u62C9\u53D6\u6570\u636E\u65F6\u8C03\u7528\r\n\t\tpull(controller) {\r\n\t\t\t// \u8FD9\u91CC\u53EF\u4EE5\u5B9E\u73B0\u53CD\u538B\u673A\u5236\r\n\t\t\t// \u5982\u679C WebSocket \u53EF\u4EE5\u5728\u6D41\u6EE1\u65F6\u505C\u6B62\u8BFB\u53D6\uFF0C\u6211\u4EEC\u5C31\u53EF\u4EE5\u5B9E\u73B0\u53CD\u538B\r\n\t\t\t// \u53C2\u8003\uFF1Ahttps://streams.spec.whatwg.org/#example-rs-push-backpressure\r\n\t\t},\r\n\r\n\t\t// \u5F53\u6D41\u88AB\u53D6\u6D88\u65F6\u8C03\u7528\r\n\t\tcancel(reason) {\r\n\t\t\t// \u6D41\u88AB\u53D6\u6D88\u7684\u51E0\u79CD\u60C5\u51B5\uFF1A\r\n\t\t\t// 1. \u5F53\u7BA1\u9053\u7684 WritableStream \u6709\u9519\u8BEF\u65F6\uFF0C\u8FD9\u4E2A\u53D6\u6D88\u51FD\u6570\u4F1A\u88AB\u8C03\u7528\uFF0C\u6240\u4EE5\u5728\u8FD9\u91CC\u5904\u7406 WebSocket \u670D\u52A1\u5668\u7684\u5173\u95ED\r\n\t\t\t// 2. \u5982\u679C ReadableStream \u88AB\u53D6\u6D88\uFF0C\u6240\u6709 controller.close/enqueue \u90FD\u9700\u8981\u8DF3\u8FC7\r\n\t\t\t// 3. \u4F46\u662F\u7ECF\u8FC7\u6D4B\u8BD5\uFF0C\u5373\u4F7F ReadableStream \u88AB\u53D6\u6D88\uFF0Ccontroller.error \u4ECD\u7136\u6709\u6548\r\n\t\t\tif (readableStreamCancel) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tlog(`\u53EF\u8BFB\u6D41\u88AB\u53D6\u6D88\uFF0C\u539F\u56E0\u662F ${reason}`);\r\n\t\t\treadableStreamCancel = true;\r\n\t\t\t// \u5B89\u5168\u5730\u5173\u95ED WebSocket\r\n\t\t\tsafeCloseWebSocket(webSocketServer);\r\n\t\t}\r\n\t});\r\n\r\n\treturn stream;\r\n}\r\n\r\n\r\n/**\r\n * \u5904\u7406 DNS \u67E5\u8BE2\u7684\u51FD\u6570\r\n * @param {ArrayBuffer} udpChunk - \u5BA2\u6237\u7AEF\u53D1\u9001\u7684 DNS \u67E5\u8BE2\u6570\u636E\r\n * @param {import(\"@cloudflare/workers-types\").WebSocket} webSocket - \u4E0E\u5BA2\u6237\u7AEF\u5EFA\u7ACB\u7684 WebSocket \u8FDE\u63A5\r\n * @param {ArrayBuffer} vlessResponseHeader - VLESS \u534F\u8BAE\u7684\u54CD\u5E94\u5934\u90E8\u6570\u636E\r\n * @param {(string)=> void} log - \u65E5\u5FD7\u8BB0\u5F55\u51FD\u6570\r\n */\r\nexport async function handleDNSQuery(udpChunk, webSocket, vlessResponseHeader, log) {\r\n\t// \u65E0\u8BBA\u5BA2\u6237\u7AEF\u53D1\u9001\u5230\u54EA\u4E2A DNS \u670D\u52A1\u5668\uFF0C\u6211\u4EEC\u603B\u662F\u4F7F\u7528\u786C\u7F16\u7801\u7684\u670D\u52A1\u5668\r\n\t// \u56E0\u4E3A\u6709\u4E9B DNS \u670D\u52A1\u5668\u4E0D\u652F\u6301 DNS over TCP\r\n\ttry {\r\n\t\t// \u9009\u7528 Google \u7684 DNS \u670D\u52A1\u5668\uFF08\u6CE8\uFF1A\u540E\u7EED\u53EF\u80FD\u4F1A\u6539\u4E3A Cloudflare \u7684 1.1.1.1\uFF09\r\n\t\tconst dnsServer = '8.8.4.4'; // \u5728 Cloudflare \u4FEE\u590D\u8FDE\u63A5\u81EA\u8EAB IP \u7684 bug \u540E\uFF0C\u5C06\u6539\u4E3A 1.1.1.1\r\n\t\tconst dnsPort = 53; // DNS \u670D\u52A1\u7684\u6807\u51C6\u7AEF\u53E3\r\n\r\n\t\t/** @type {ArrayBuffer | null} */\r\n\t\tlet vlessHeader = vlessResponseHeader; // \u4FDD\u5B58 VLESS \u54CD\u5E94\u5934\u90E8\uFF0C\u7528\u4E8E\u540E\u7EED\u53D1\u9001\r\n\r\n\t\t/** @type {import(\"@cloudflare/workers-types\").Socket} */\r\n\t\t\t// \u4E0E\u6307\u5B9A\u7684 DNS \u670D\u52A1\u5668\u5EFA\u7ACB TCP \u8FDE\u63A5\r\n\t\tconst tcpSocket = connect({\r\n\t\t\t\thostname: dnsServer,\r\n\t\t\t\tport: dnsPort,\r\n\t\t\t});\r\n\r\n\t\tlog(`\u8FDE\u63A5\u5230 ${dnsServer}:${dnsPort}`); // \u8BB0\u5F55\u8FDE\u63A5\u4FE1\u606F\r\n\t\tconst writer = tcpSocket.writable.getWriter();\r\n\t\tawait writer.write(udpChunk); // \u5C06\u5BA2\u6237\u7AEF\u7684 DNS \u67E5\u8BE2\u6570\u636E\u53D1\u9001\u7ED9 DNS \u670D\u52A1\u5668\r\n\t\twriter.releaseLock(); // \u91CA\u653E\u5199\u5165\u5668\uFF0C\u5141\u8BB8\u5176\u4ED6\u90E8\u5206\u4F7F\u7528\r\n\r\n\t\t// \u5C06\u4ECE DNS \u670D\u52A1\u5668\u63A5\u6536\u5230\u7684\u54CD\u5E94\u6570\u636E\u901A\u8FC7 WebSocket \u53D1\u9001\u56DE\u5BA2\u6237\u7AEF\r\n\t\tawait tcpSocket.readable.pipeTo(new WritableStream({\r\n\t\t\tasync write(chunk) {\r\n\t\t\t\tif (webSocket.readyState === WS_READY_STATE_OPEN) {\r\n\t\t\t\t\tif (vlessHeader) {\r\n\t\t\t\t\t\t// \u5982\u679C\u6709 VLESS \u5934\u90E8\uFF0C\u5219\u5C06\u5176\u4E0E DNS \u54CD\u5E94\u6570\u636E\u5408\u5E76\u540E\u53D1\u9001\r\n\t\t\t\t\t\twebSocket.send(await new Blob([vlessHeader, chunk]).arrayBuffer());\r\n\t\t\t\t\t\tvlessHeader = null; // \u5934\u90E8\u53EA\u53D1\u9001\u4E00\u6B21\uFF0C\u4E4B\u540E\u7F6E\u4E3A null\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\t// \u5426\u5219\u76F4\u63A5\u53D1\u9001 DNS \u54CD\u5E94\u6570\u636E\r\n\t\t\t\t\t\twebSocket.send(chunk);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tclose() {\r\n\t\t\t\tlog(`DNS \u670D\u52A1\u5668(${dnsServer}) TCP \u8FDE\u63A5\u5DF2\u5173\u95ED`); // \u8BB0\u5F55\u8FDE\u63A5\u5173\u95ED\u4FE1\u606F\r\n\t\t\t},\r\n\t\t\tabort(reason) {\r\n\t\t\t\tconsole.error(`DNS \u670D\u52A1\u5668(${dnsServer}) TCP \u8FDE\u63A5\u5F02\u5E38\u4E2D\u65AD`, reason); // \u8BB0\u5F55\u5F02\u5E38\u4E2D\u65AD\u539F\u56E0\r\n\t\t\t},\r\n\t\t}));\r\n\t} catch (error) {\r\n\t\t// \u6355\u83B7\u5E76\u8BB0\u5F55\u4EFB\u4F55\u53EF\u80FD\u53D1\u751F\u7684\u9519\u8BEF\r\n\t\tconsole.error(\r\n\t\t\t// @ts-ignore\r\n\t\t\t`handleDNSQuery \u51FD\u6570\u53D1\u751F\u5F02\u5E38\uFF0C\u9519\u8BEF\u4FE1\u606F: ${error.message}`\r\n\t\t);\r\n\t}\r\n}\r\n\r\n/**\r\n * \u89E3\u6790 VLESS \u534F\u8BAE\u7684\u5934\u90E8\u6570\u636E\r\n * @param { ArrayBuffer} vlessBuffer VLESS \u534F\u8BAE\u7684\u539F\u59CB\u5934\u90E8\u6570\u636E\r\n * @param {string} userID \u7528\u4E8E\u9A8C\u8BC1\u7684\u7528\u6237 ID\r\n * @returns {Object} \u89E3\u6790\u7ED3\u679C\uFF0C\u5305\u62EC\u662F\u5426\u6709\u9519\u8BEF\u3001\u9519\u8BEF\u4FE1\u606F\u3001\u8FDC\u7A0B\u5730\u5740\u4FE1\u606F\u7B49\r\n */\r\nexport function processVlessHeader(vlessBuffer, userID) {\r\n\t// \u68C0\u67E5\u6570\u636E\u957F\u5EA6\u662F\u5426\u8DB3\u591F\uFF08\u81F3\u5C11\u9700\u8981 24 \u5B57\u8282\uFF09\r\n\tif (vlessBuffer.byteLength < 24) {\r\n\t\treturn {\r\n\t\t\thasError: true,\r\n\t\t\tmessage: 'invalid data',\r\n\t\t};\r\n\t}\r\n\r\n\t// \u89E3\u6790 VLESS \u534F\u8BAE\u7248\u672C\uFF08\u7B2C\u4E00\u4E2A\u5B57\u8282\uFF09\r\n\tconst version = new Uint8Array(vlessBuffer.slice(0, 1));\r\n\r\n\tlet isValidUser = false;\r\n\tlet isUDP = false;\r\n\r\n\t// \u9A8C\u8BC1\u7528\u6237 ID\uFF08\u63A5\u4E0B\u6765\u7684 16 \u4E2A\u5B57\u8282\uFF09\r\n\tif (CommonUtils.stringify(new Uint8Array(vlessBuffer.slice(1, 17))) === userID) {\r\n\t\tisValidUser = true;\r\n\t}\r\n\t// \u5982\u679C\u7528\u6237 ID \u65E0\u6548\uFF0C\u8FD4\u56DE\u9519\u8BEF\r\n\tif (!isValidUser) {\r\n\t\treturn {\r\n\t\t\thasError: true,\r\n\t\t\tmessage: `invalid user ${(new Uint8Array(vlessBuffer.slice(1, 17)))}`,\r\n\t\t};\r\n\t}\r\n\r\n\t// \u83B7\u53D6\u9644\u52A0\u9009\u9879\u7684\u957F\u5EA6\uFF08\u7B2C 17 \u4E2A\u5B57\u8282\uFF09\r\n\tconst optLength = new Uint8Array(vlessBuffer.slice(17, 18))[0];\r\n\t// \u6682\u65F6\u8DF3\u8FC7\u9644\u52A0\u9009\u9879\r\n\r\n\t// \u89E3\u6790\u547D\u4EE4\uFF08\u7D27\u8DDF\u5728\u9009\u9879\u4E4B\u540E\u7684 1 \u4E2A\u5B57\u8282\uFF09\r\n\t// 0x01: TCP, 0x02: UDP, 0x03: MUX\uFF08\u591A\u8DEF\u590D\u7528\uFF09\r\n\tconst command = new Uint8Array(\r\n\t\tvlessBuffer.slice(18 + optLength, 18 + optLength + 1)\r\n\t)[0];\r\n\r\n\t// 0x01 TCP\r\n\t// 0x02 UDP\r\n\t// 0x03 MUX\r\n\tif (command === 1) {\r\n\t\t// TCP \u547D\u4EE4\uFF0C\u4E0D\u9700\u7279\u6B8A\u5904\u7406\r\n\t} else if (command === 2) {\r\n\t\t// UDP \u547D\u4EE4\r\n\t\tisUDP = true;\r\n\t} else {\r\n\t\t// \u4E0D\u652F\u6301\u7684\u547D\u4EE4\r\n\t\treturn {\r\n\t\t\thasError: true,\r\n\t\t\tmessage: `command ${command} is not support, command 01-tcp,02-udp,03-mux`,\r\n\t\t};\r\n\t}\r\n\r\n\t// \u89E3\u6790\u8FDC\u7A0B\u7AEF\u53E3\uFF08\u5927\u7AEF\u5E8F\uFF0C2 \u5B57\u8282\uFF09\r\n\tconst portIndex = 18 + optLength + 1;\r\n\tconst portBuffer = vlessBuffer.slice(portIndex, portIndex + 2);\r\n\t// port is big-Endian in raw data etc 80 == 0x005d\r\n\tconst portRemote = new DataView(portBuffer).getUint16(0);\r\n\r\n\t// \u89E3\u6790\u5730\u5740\u7C7B\u578B\u548C\u5730\u5740\r\n\tlet addressIndex = portIndex + 2;\r\n\tconst addressBuffer = new Uint8Array(\r\n\t\tvlessBuffer.slice(addressIndex, addressIndex + 1)\r\n\t);\r\n\r\n\t// \u5730\u5740\u7C7B\u578B\uFF1A1-IPv4(4\u5B57\u8282), 2-\u57DF\u540D(\u53EF\u53D8\u957F), 3-IPv6(16\u5B57\u8282)\r\n\tconst addressType = addressBuffer[0];\r\n\tlet addressLength = 0;\r\n\tlet addressValueIndex = addressIndex + 1;\r\n\tlet addressValue = '';\r\n\r\n\tswitch (addressType) {\r\n\t\tcase 1:\r\n\t\t\t// IPv4 \u5730\u5740\r\n\t\t\taddressLength = 4;\r\n\t\t\t// \u5C06 4 \u4E2A\u5B57\u8282\u8F6C\u4E3A\u70B9\u5206\u5341\u8FDB\u5236\u683C\u5F0F\r\n\t\t\taddressValue = new Uint8Array(\r\n\t\t\t\tvlessBuffer.slice(addressValueIndex, addressValueIndex + addressLength)\r\n\t\t\t).join('.');\r\n\t\t\tbreak;\r\n\t\tcase 2:\r\n\t\t\t// \u57DF\u540D\r\n\t\t\t// \u7B2C\u4E00\u4E2A\u5B57\u8282\u662F\u57DF\u540D\u957F\u5EA6\r\n\t\t\taddressLength = new Uint8Array(\r\n\t\t\t\tvlessBuffer.slice(addressValueIndex, addressValueIndex + 1)\r\n\t\t\t)[0];\r\n\t\t\taddressValueIndex += 1;\r\n\t\t\t// \u89E3\u7801\u57DF\u540D\r\n\t\t\taddressValue = new TextDecoder().decode(\r\n\t\t\t\tvlessBuffer.slice(addressValueIndex, addressValueIndex + addressLength)\r\n\t\t\t);\r\n\t\t\tbreak;\r\n\t\tcase 3:\r\n\t\t\t// IPv6 \u5730\u5740\r\n\t\t\taddressLength = 16;\r\n\t\t\tconst dataView = new DataView(\r\n\t\t\t\tvlessBuffer.slice(addressValueIndex, addressValueIndex + addressLength)\r\n\t\t\t);\r\n\t\t\t// \u6BCF 2 \u5B57\u8282\u6784\u6210 IPv6 \u5730\u5740\u7684\u4E00\u90E8\u5206\r\n\t\t\tconst ipv6 = [];\r\n\t\t\tfor (let i = 0; i < 8; i++) {\r\n\t\t\t\tipv6.push(dataView.getUint16(i * 2).toString(16));\r\n\t\t\t}\r\n\t\t\taddressValue = ipv6.join(':');\r\n\t\t\t// seems no need add [] for ipv6\r\n\t\t\tbreak;\r\n\t\tdefault:\r\n\t\t\t// \u65E0\u6548\u7684\u5730\u5740\u7C7B\u578B\r\n\t\t\treturn {\r\n\t\t\t\thasError: true,\r\n\t\t\t\tmessage: `invild addressType is ${addressType}`,\r\n\t\t\t};\r\n\t}\r\n\r\n\t// \u786E\u4FDD\u5730\u5740\u4E0D\u4E3A\u7A7A\r\n\tif (!addressValue) {\r\n\t\treturn {\r\n\t\t\thasError: true,\r\n\t\t\tmessage: `addressValue is empty, addressType is ${addressType}`,\r\n\t\t};\r\n\t}\r\n\r\n\t// \u8FD4\u56DE\u89E3\u6790\u7ED3\u679C\r\n\treturn {\r\n\t\thasError: false,\r\n\t\taddressRemote: addressValue,  // \u89E3\u6790\u540E\u7684\u8FDC\u7A0B\u5730\u5740\r\n\t\taddressType,                 // \u5730\u5740\u7C7B\u578B\r\n\t\tportRemote,                 // \u8FDC\u7A0B\u7AEF\u53E3\r\n\t\trawDataIndex: addressValueIndex + addressLength,  // \u539F\u59CB\u6570\u636E\u7684\u5B9E\u9645\u8D77\u59CB\u4F4D\u7F6E\r\n\t\tvlessVersion: version,      // VLESS \u534F\u8BAE\u7248\u672C\r\n\t\tisUDP,                     // \u662F\u5426\u662F UDP \u8BF7\u6C42\r\n\t};\r\n}\r\n\r\n/**\r\n * \u5904\u7406\u51FA\u7AD9 TCP \u8FDE\u63A5\u3002\r\n *\r\n * @param {any} remoteSocket \u8FDC\u7A0B Socket \u7684\u5305\u88C5\u5668\uFF0C\u7528\u4E8E\u5B58\u50A8\u5B9E\u9645\u7684 Socket \u5BF9\u8C61\r\n * @param {number} addressType \u8981\u8FDE\u63A5\u7684\u8FDC\u7A0B\u5730\u5740\u7C7B\u578B\uFF08\u5982 IP \u7C7B\u578B\uFF1AIPv4 \u6216 IPv6\uFF09\r\n * @param {string} addressRemote \u8981\u8FDE\u63A5\u7684\u8FDC\u7A0B\u5730\u5740\r\n * @param {number} portRemote \u8981\u8FDE\u63A5\u7684\u8FDC\u7A0B\u7AEF\u53E3\r\n * @param {Uint8Array} rawClientData \u8981\u5199\u5165\u7684\u539F\u59CB\u5BA2\u6237\u7AEF\u6570\u636E\r\n * @param {import(\"@cloudflare/workers-types\").WebSocket} webSocket \u7528\u4E8E\u4F20\u9012\u8FDC\u7A0B Socket \u7684 WebSocket\r\n * @param {Uint8Array} vlessResponseHeader VLESS \u54CD\u5E94\u5934\u90E8\r\n * @param {function} log \u65E5\u5FD7\u8BB0\u5F55\u51FD\u6570\r\n * @returns {Promise<void>} \u5F02\u6B65\u64CD\u4F5C\u7684 Promise\r\n */\r\nexport async function handleTCPOutBound(remoteSocket, addressType, addressRemote, portRemote, rawClientData, webSocket, vlessResponseHeader, log,) {\r\n\tasync function useSocks5Pattern(address) {\r\n\t\tif ( AppParam.go2Socks5s.includes(atob('YWxsIGlu')) || AppParam.go2Socks5s.includes(atob('Kg==')) ) return true;\r\n\t\treturn AppParam.go2Socks5s.some(pattern => {\r\n\t\t\tlet regexPattern = pattern.replace(/\\*/g, '.*');\r\n\t\t\tlet regex = new RegExp(`^${regexPattern}$`, 'i');\r\n\t\t\treturn regex.test(address);\r\n\t\t});\r\n\t}\r\n\t/**\r\n\t * \u8FDE\u63A5\u8FDC\u7A0B\u670D\u52A1\u5668\u5E76\u5199\u5165\u6570\u636E\r\n\t * @param {string} address \u8981\u8FDE\u63A5\u7684\u5730\u5740\r\n\t * @param {number} port \u8981\u8FDE\u63A5\u7684\u7AEF\u53E3\r\n\t * @param {boolean} socks \u662F\u5426\u4F7F\u7528 SOCKS5 \u4EE3\u7406\u8FDE\u63A5\r\n\t * @returns {Promise<import(\"@cloudflare/workers-types\").Socket>} \u8FDE\u63A5\u540E\u7684 TCP Socket\r\n\t */\r\n\tasync function connectAndWrite(address, port, socks = false) {\r\n\t\t/** @type {import(\"@cloudflare/workers-types\").Socket} */\r\n\t\tlog(`connected to ${address}:${port}`);\r\n\t\t//if (/^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?).){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$/.test(address)) address = `${atob('d3d3Lg==')}${address}${atob('LmlwLjA5MDIyNy54eXo=')}`;\r\n\t\t// \u5982\u679C\u6307\u5B9A\u4F7F\u7528 SOCKS5 \u4EE3\u7406\uFF0C\u5219\u901A\u8FC7 SOCKS5 \u534F\u8BAE\u8FDE\u63A5\uFF1B\u5426\u5219\u76F4\u63A5\u8FDE\u63A5\r\n\t\tconst tcpSocket = socks ? await socks5Connect(addressType, address, port, log)\r\n\t\t\t: connect({\r\n\t\t\t\t// @ts-ignore\r\n\t\t\t\thostname: address,\r\n\t\t\t\tport: port,\r\n\t\t\t});\r\n\t\tremoteSocket.value = tcpSocket;\r\n\t\t//log(`connected to ${address}:${port}`);\r\n\t\t// @ts-ignore\r\n\t\tconst writer = tcpSocket.writable.getWriter();\r\n\t\t// \u9996\u6B21\u5199\u5165\uFF0C\u901A\u5E38\u662F TLS \u5BA2\u6237\u7AEF Hello \u6D88\u606F\r\n\t\tawait writer.write(rawClientData);\r\n\t\twriter.releaseLock();\r\n\t\treturn tcpSocket;\r\n\t}\r\n\r\n\t/**\r\n\t * \u91CD\u8BD5\u51FD\u6570\uFF1A\u5F53 Cloudflare \u7684 TCP Socket \u6CA1\u6709\u4F20\u5165\u6570\u636E\u65F6\uFF0C\u6211\u4EEC\u5C1D\u8BD5\u91CD\u5B9A\u5411 IP\r\n\t * \u8FD9\u53EF\u80FD\u662F\u56E0\u4E3A\u67D0\u4E9B\u7F51\u7EDC\u95EE\u9898\u5BFC\u81F4\u7684\u8FDE\u63A5\u5931\u8D25\r\n\t */\r\n\tasync function retry() {\r\n\t\tif (AppParam.enableSocks) {\r\n\t\t\t// \u5982\u679C\u542F\u7528\u4E86 SOCKS5\uFF0C\u901A\u8FC7 SOCKS5 \u4EE3\u7406\u91CD\u8BD5\u8FDE\u63A5\r\n\t\t\ttcpSocket = await connectAndWrite(addressRemote, portRemote, true);\r\n\t\t} else {\r\n\t\t\t// \u5426\u5219\uFF0C\u5C1D\u8BD5\u4F7F\u7528\u9884\u8BBE\u7684\u4EE3\u7406 IP\uFF08\u5982\u679C\u6709\uFF09\u6216\u539F\u59CB\u5730\u5740\u91CD\u8BD5\u8FDE\u63A5\r\n\t\t\tif (!AppParam.proxyIP || AppParam.proxyIP == '') AppParam.proxyIP = atob('cHJveHlpcC5meHhrLmRlZHluLmlv');\r\n\t\t\ttcpSocket = await connectAndWrite(AppParam.proxyIP || addressRemote, portRemote);\r\n\t\t}\r\n\t\t// \u65E0\u8BBA\u91CD\u8BD5\u662F\u5426\u6210\u529F\uFF0C\u90FD\u8981\u5173\u95ED WebSocket\uFF08\u53EF\u80FD\u662F\u4E3A\u4E86\u91CD\u65B0\u5EFA\u7ACB\u8FDE\u63A5\uFF09\r\n\t\t// @ts-ignore\r\n\t\ttcpSocket.closed.catch(error => {\r\n\t\t\tconsole.log('retry tcpSocket closed error', error);\r\n\t\t}).finally(() => {\r\n\t\t\tsafeCloseWebSocket(webSocket);\r\n\t\t})\r\n\t\t// \u5EFA\u7ACB\u4ECE\u8FDC\u7A0B Socket \u5230 WebSocket \u7684\u6570\u636E\u6D41\r\n\t\tremoteSocketToWS(tcpSocket, webSocket, vlessResponseHeader, null, log);\r\n\t}\r\n\r\n\tlet useSocks = false;\r\n\tif( AppParam.go2Socks5s.length > 0 && AppParam.enableSocks ) useSocks = await useSocks5Pattern(addressRemote);\r\n\t// \u9996\u6B21\u5C1D\u8BD5\u8FDE\u63A5\u8FDC\u7A0B\u670D\u52A1\u5668\r\n\tlet tcpSocket = await connectAndWrite(addressRemote, portRemote, useSocks);\r\n\r\n\t// \u5F53\u8FDC\u7A0B Socket \u5C31\u7EEA\u65F6\uFF0C\u5C06\u5176\u4F20\u9012\u7ED9 WebSocket\r\n\t// \u5EFA\u7ACB\u4ECE\u8FDC\u7A0B\u670D\u52A1\u5668\u5230 WebSocket \u7684\u6570\u636E\u6D41\uFF0C\u7528\u4E8E\u5C06\u8FDC\u7A0B\u670D\u52A1\u5668\u7684\u54CD\u5E94\u53D1\u9001\u56DE\u5BA2\u6237\u7AEF\r\n\t// \u5982\u679C\u8FDE\u63A5\u5931\u8D25\u6216\u65E0\u6570\u636E\uFF0Cretry \u51FD\u6570\u5C06\u88AB\u8C03\u7528\u8FDB\u884C\u91CD\u8BD5\r\n\tremoteSocketToWS(tcpSocket, webSocket, vlessResponseHeader, retry, log);\r\n}\r\n\r\n\r\n/**\r\n * \u5C06\u8FDC\u7A0B Socket \u7684\u6570\u636E\u8F6C\u53D1\u5230 WebSocket\r\n *\r\n * @param {import(\"@cloudflare/workers-types\").Socket} remoteSocket \u8FDC\u7A0B\u670D\u52A1\u5668\u7684 Socket \u8FDE\u63A5\r\n * @param {import(\"@cloudflare/workers-types\").WebSocket} webSocket \u5BA2\u6237\u7AEF\u7684 WebSocket \u8FDE\u63A5\r\n * @param {ArrayBuffer} vlessResponseHeader VLESS \u534F\u8BAE\u7684\u54CD\u5E94\u5934\u90E8\r\n * @param {(() => Promise<void>) | null} retry \u91CD\u8BD5\u51FD\u6570\uFF0C\u5F53\u6CA1\u6709\u6570\u636E\u65F6\u8C03\u7528\r\n * @param {*} log \u65E5\u5FD7\u51FD\u6570\r\n */\r\nexport async function remoteSocketToWS(remoteSocket, webSocket, vlessResponseHeader, retry, log) {\r\n\t// \u5C06\u6570\u636E\u4ECE\u8FDC\u7A0B\u670D\u52A1\u5668\u8F6C\u53D1\u5230 WebSocket\r\n\tlet remoteChunkCount = 0;\r\n\tlet chunks = [];\r\n\t/** @type {ArrayBuffer | null} */\r\n\tlet vlessHeader  = vlessResponseHeader;\r\n\tlet hasIncomingData = false; // \u68C0\u67E5\u8FDC\u7A0B Socket \u662F\u5426\u6709\u4F20\u5165\u6570\u636E\r\n\r\n\t// \u4F7F\u7528\u7BA1\u9053\u5C06\u8FDC\u7A0B Socket \u7684\u53EF\u8BFB\u6D41\u8FDE\u63A5\u5230\u4E00\u4E2A\u53EF\u5199\u6D41\r\n\t// @ts-ignore\r\n\tawait remoteSocket.readable\r\n\t\t.pipeTo(\r\n\t\t\tnew WritableStream({\r\n\t\t\t\tstart() {\r\n\t\t\t\t\t// \u521D\u59CB\u5316\u65F6\u4E0D\u9700\u8981\u4EFB\u4F55\u64CD\u4F5C\r\n\t\t\t\t},\r\n\t\t\t\t/**\r\n\t\t\t\t * \u5904\u7406\u6BCF\u4E2A\u6570\u636E\u5757\r\n\t\t\t\t * @param {Uint8Array} chunk \u6570\u636E\u5757\r\n\t\t\t\t * @param {*} controller \u63A7\u5236\u5668\r\n\t\t\t\t */\r\n\t\t\t\tasync write(chunk, controller) {\r\n\t\t\t\t\thasIncomingData = true; // \u6807\u8BB0\u5DF2\u6536\u5230\u6570\u636E\r\n\t\t\t\t\t// remoteChunkCount++; // \u7528\u4E8E\u6D41\u91CF\u63A7\u5236\uFF0C\u73B0\u5728\u4F3C\u4E4E\u4E0D\u9700\u8981\u4E86\r\n\r\n\t\t\t\t\t// \u68C0\u67E5 WebSocket \u662F\u5426\u5904\u4E8E\u5F00\u653E\u72B6\u6001\r\n\t\t\t\t\tif (webSocket.readyState !== WS_READY_STATE_OPEN) {\r\n\t\t\t\t\t\tcontroller.error(\r\n\t\t\t\t\t\t\t'webSocket.readyState is not open, maybe close'\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (vlessHeader) {\r\n\t\t\t\t\t\t// \u5982\u679C\u6709 VLESS \u54CD\u5E94\u5934\u90E8\uFF0C\u5C06\u5176\u4E0E\u7B2C\u4E00\u4E2A\u6570\u636E\u5757\u4E00\u8D77\u53D1\u9001\r\n\t\t\t\t\t\twebSocket.send(await new Blob([vlessHeader, chunk]).arrayBuffer());\r\n\t\t\t\t\t\tvlessHeader = null; // \u6E05\u7A7A\u5934\u90E8\uFF0C\u4E4B\u540E\u4E0D\u518D\u53D1\u9001\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\t// \u76F4\u63A5\u53D1\u9001\u6570\u636E\u5757\r\n\t\t\t\t\t\t// \u4EE5\u524D\u8FD9\u91CC\u6709\u6D41\u91CF\u63A7\u5236\u4EE3\u7801\uFF0C\u9650\u5236\u5927\u91CF\u6570\u636E\u7684\u53D1\u9001\u901F\u7387\r\n\t\t\t\t\t\t// \u4F46\u73B0\u5728 Cloudflare \u4F3C\u4E4E\u5DF2\u7ECF\u4FEE\u590D\u4E86\u8FD9\u4E2A\u95EE\u9898\r\n\t\t\t\t\t\t// if (remoteChunkCount > 20000) {\r\n\t\t\t\t\t\t// \t// cf one package is 4096 byte(4kb),  4096 * 20000 = 80M\r\n\t\t\t\t\t\t// \tawait delay(1);\r\n\t\t\t\t\t\t// }\r\n\t\t\t\t\t\twebSocket.send(chunk);\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\t\t\tclose() {\r\n\t\t\t\t\t// \u5F53\u8FDC\u7A0B\u8FDE\u63A5\u7684\u53EF\u8BFB\u6D41\u5173\u95ED\u65F6\r\n\t\t\t\t\tlog(`remoteConnection!.readable is close with hasIncomingData is ${hasIncomingData}`);\r\n\t\t\t\t\t// \u4E0D\u9700\u8981\u4E3B\u52A8\u5173\u95ED WebSocket\uFF0C\u56E0\u4E3A\u8FD9\u53EF\u80FD\u5BFC\u81F4 HTTP ERR_CONTENT_LENGTH_MISMATCH \u95EE\u9898\r\n\t\t\t\t\t// \u5BA2\u6237\u7AEF\u65E0\u8BBA\u5982\u4F55\u90FD\u4F1A\u53D1\u9001\u5173\u95ED\u4E8B\u4EF6\r\n\t\t\t\t\t// safeCloseWebSocket(webSocket);\r\n\t\t\t\t},\r\n\t\t\t\tabort(reason) {\r\n\t\t\t\t\t// \u5F53\u8FDC\u7A0B\u8FDE\u63A5\u7684\u53EF\u8BFB\u6D41\u4E2D\u65AD\u65F6\r\n\t\t\t\t\tconsole.error(`remoteConnection!.readable abort`, reason);\r\n\t\t\t\t},\r\n\t\t\t})\r\n\t\t)\r\n\t\t.catch((error) => {\r\n\t\t\t// \u6355\u83B7\u5E76\u8BB0\u5F55\u4EFB\u4F55\u5F02\u5E38\r\n\t\t\tconsole.error(\r\n\t\t\t\t`remoteSocketToWS has exception `,\r\n\t\t\t\terror.stack || error\r\n\t\t\t);\r\n\t\t\t// \u53D1\u751F\u9519\u8BEF\u65F6\u5B89\u5168\u5730\u5173\u95ED WebSocket\r\n\t\t\tsafeCloseWebSocket(webSocket);\r\n\t\t});\r\n\r\n\t// \u5904\u7406 Cloudflare \u8FDE\u63A5 Socket \u7684\u7279\u6B8A\u9519\u8BEF\u60C5\u51B5\r\n\t// 1. Socket.closed \u5C06\u6709\u9519\u8BEF\r\n\t// 2. Socket.readable \u5C06\u5173\u95ED\uFF0C\u4F46\u6CA1\u6709\u4EFB\u4F55\u6570\u636E\r\n\tif (hasIncomingData === false && retry) {\r\n\t\tlog(`retry`);\r\n\t\tretry(); // \u8C03\u7528\u91CD\u8BD5\u51FD\u6570\uFF0C\u5C1D\u8BD5\u91CD\u65B0\u5EFA\u7ACB\u8FDE\u63A5\r\n\t}\r\n}\r\n/**\r\n * \u5B89\u5168\u5730\u5173\u95ED WebSocket \u8FDE\u63A5\r\n * \u901A\u5E38\uFF0CWebSocket \u5728\u5173\u95ED\u65F6\u4E0D\u4F1A\u629B\u51FA\u5F02\u5E38\uFF0C\u4F46\u4E3A\u4E86\u4EE5\u9632\u4E07\u4E00\uFF0C\u6211\u4EEC\u8FD8\u662F\u7528 try-catch \u5305\u88F9\r\n * @param {import(\"@cloudflare/workers-types\").WebSocket} socket \u8981\u5173\u95ED\u7684 WebSocket \u5BF9\u8C61\r\n */\r\nexport function safeCloseWebSocket(socket) {\r\n\ttry {\r\n\t\t// \u53EA\u6709\u5728 WebSocket \u5904\u4E8E\u5F00\u653E\u6216\u6B63\u5728\u5173\u95ED\u72B6\u6001\u65F6\u624D\u8C03\u7528 close()\r\n\t\t// \u8FD9\u907F\u514D\u4E86\u5728\u5DF2\u5173\u95ED\u6216\u8FDE\u63A5\u4E2D\u7684 WebSocket \u4E0A\u8C03\u7528 close()\r\n\t\tif (socket.readyState === WS_READY_STATE_OPEN || socket.readyState === WS_READY_STATE_CLOSING) {\r\n\t\t\tsocket.close();\r\n\t\t}\r\n\t} catch (error) {\r\n\t\t// \u8BB0\u5F55\u4EFB\u4F55\u53EF\u80FD\u53D1\u751F\u7684\u9519\u8BEF\uFF0C\u867D\u7136\u6309\u7167\u89C4\u8303\u4E0D\u5E94\u8BE5\u6709\u9519\u8BEF\r\n\t\tconsole.error('safeCloseWebSocket error', error);\r\n\t}\r\n}\r\n\r\n/**\r\n * \u5EFA\u7ACB SOCKS5 \u4EE3\u7406\u8FDE\u63A5\r\n * @param {number} addressType \u76EE\u6807\u5730\u5740\u7C7B\u578B\uFF081: IPv4, 2: \u57DF\u540D, 3: IPv6\uFF09\r\n * @param {string} addressRemote \u76EE\u6807\u5730\u5740\uFF08\u53EF\u4EE5\u662F IP \u6216\u57DF\u540D\uFF09\r\n * @param {number} portRemote \u76EE\u6807\u7AEF\u53E3\r\n * @param {function} log \u65E5\u5FD7\u8BB0\u5F55\u51FD\u6570\r\n */\r\nexport async function socks5Connect(addressType, addressRemote, portRemote, log) {\r\n\t// @ts-ignore\r\n\tconst { username, password, hostname, port } = AppParam.parsedSocks5Address;\r\n\t// \u8FDE\u63A5\u5230 SOCKS5 \u4EE3\u7406\u670D\u52A1\u5668\r\n\tconst socket = connect({\r\n\t\thostname, // SOCKS5 \u670D\u52A1\u5668\u7684\u4E3B\u673A\u540D\r\n\t\tport,    // SOCKS5 \u670D\u52A1\u5668\u7684\u7AEF\u53E3\r\n\t});\r\n\r\n\t// \u8BF7\u6C42\u5934\u683C\u5F0F\uFF08Worker -> SOCKS5 \u670D\u52A1\u5668\uFF09:\r\n\t// +----+----------+----------+\r\n\t// |VER | NMETHODS | METHODS  |\r\n\t// +----+----------+----------+\r\n\t// | 1  |    1     | 1 to 255 |\r\n\t// +----+----------+----------+\r\n\r\n\t// https://en.wikipedia.org/wiki/SOCKS#SOCKS5\r\n\t// METHODS \u5B57\u6BB5\u7684\u542B\u4E49:\r\n\t// 0x00 \u4E0D\u9700\u8981\u8BA4\u8BC1\r\n\t// 0x02 \u7528\u6237\u540D/\u5BC6\u7801\u8BA4\u8BC1 https://datatracker.ietf.org/doc/html/rfc1929\r\n\tconst socksGreeting = new Uint8Array([5, 2, 0, 2]);\r\n\t// 5: SOCKS5 \u7248\u672C\u53F7, 2: \u652F\u6301\u7684\u8BA4\u8BC1\u65B9\u6CD5\u6570, 0\u548C2: \u4E24\u79CD\u8BA4\u8BC1\u65B9\u6CD5\uFF08\u65E0\u8BA4\u8BC1\u548C\u7528\u6237\u540D/\u5BC6\u7801\uFF09\r\n\r\n\tconst writer = socket.writable.getWriter();\r\n\r\n\tawait writer.write(socksGreeting);\r\n\tlog('\u5DF2\u53D1\u9001 SOCKS5 \u95EE\u5019\u6D88\u606F');\r\n\r\n\tconst reader = socket.readable.getReader();\r\n\tconst encoder = new TextEncoder();\r\n\tlet res = (await reader.read()).value;\r\n\t// \u54CD\u5E94\u683C\u5F0F\uFF08SOCKS5 \u670D\u52A1\u5668 -> Worker\uFF09:\r\n\t// +----+--------+\r\n\t// |VER | METHOD |\r\n\t// +----+--------+\r\n\t// | 1  |   1    |\r\n\t// +----+--------+\r\n\tif (res[0] !== 0x05) {\r\n\t\tlog(`SOCKS5 \u670D\u52A1\u5668\u7248\u672C\u9519\u8BEF: \u6536\u5230 ${res[0]}\uFF0C\u671F\u671B\u662F 5`);\r\n\t\treturn;\r\n\t}\r\n\tif (res[1] === 0xff) {\r\n\t\tlog(\"\u670D\u52A1\u5668\u4E0D\u63A5\u53D7\u4EFB\u4F55\u8BA4\u8BC1\u65B9\u6CD5\");\r\n\t\treturn;\r\n\t}\r\n\r\n\t// \u5982\u679C\u8FD4\u56DE 0x0502\uFF0C\u8868\u793A\u9700\u8981\u7528\u6237\u540D/\u5BC6\u7801\u8BA4\u8BC1\r\n\tif (res[1] === 0x02) {\r\n\t\tlog(\"SOCKS5 \u670D\u52A1\u5668\u9700\u8981\u8BA4\u8BC1\");\r\n\t\tif (!username || !password) {\r\n\t\t\tlog(\"\u8BF7\u63D0\u4F9B\u7528\u6237\u540D\u548C\u5BC6\u7801\");\r\n\t\t\treturn;\r\n\t\t}\r\n\t\t// \u8BA4\u8BC1\u8BF7\u6C42\u683C\u5F0F:\r\n\t\t// +----+------+----------+------+----------+\r\n\t\t// |VER | ULEN |  UNAME   | PLEN |  PASSWD  |\r\n\t\t// +----+------+----------+------+----------+\r\n\t\t// | 1  |  1   | 1 to 255 |  1   | 1 to 255 |\r\n\t\t// +----+------+----------+------+----------+\r\n\t\tconst authRequest = new Uint8Array([\r\n\t\t\t1,                   // \u8BA4\u8BC1\u5B50\u534F\u8BAE\u7248\u672C\r\n\t\t\tusername.length,    // \u7528\u6237\u540D\u957F\u5EA6\r\n\t\t\t...encoder.encode(username), // \u7528\u6237\u540D\r\n\t\t\tpassword.length,    // \u5BC6\u7801\u957F\u5EA6\r\n\t\t\t...encoder.encode(password)  // \u5BC6\u7801\r\n\t\t]);\r\n\t\tawait writer.write(authRequest);\r\n\t\tres = (await reader.read()).value;\r\n\t\t// \u671F\u671B\u8FD4\u56DE 0x0100 \u8868\u793A\u8BA4\u8BC1\u6210\u529F\r\n\t\tif (res[0] !== 0x01 || res[1] !== 0x00) {\r\n\t\t\tlog(\"SOCKS5 \u670D\u52A1\u5668\u8BA4\u8BC1\u5931\u8D25\");\r\n\t\t\treturn;\r\n\t\t}\r\n\t}\r\n\r\n\t// \u8BF7\u6C42\u6570\u636E\u683C\u5F0F\uFF08Worker -> SOCKS5 \u670D\u52A1\u5668\uFF09:\r\n\t// +----+-----+-------+------+----------+----------+\r\n\t// |VER | CMD |  RSV  | ATYP | DST.ADDR | DST.PORT |\r\n\t// +----+-----+-------+------+----------+----------+\r\n\t// | 1  |  1  | X'00' |  1   | Variable |    2     |\r\n\t// +----+-----+-------+------+----------+----------+\r\n\t// ATYP: \u5730\u5740\u7C7B\u578B\r\n\t// 0x01: IPv4 \u5730\u5740\r\n\t// 0x03: \u57DF\u540D\r\n\t// 0x04: IPv6 \u5730\u5740\r\n\t// DST.ADDR: \u76EE\u6807\u5730\u5740\r\n\t// DST.PORT: \u76EE\u6807\u7AEF\u53E3\uFF08\u7F51\u7EDC\u5B57\u8282\u5E8F\uFF09\r\n\r\n\t// addressType\r\n\t// 1 --> IPv4  \u5730\u5740\u957F\u5EA6 = 4\r\n\t// 2 --> \u57DF\u540D\r\n\t// 3 --> IPv6  \u5730\u5740\u957F\u5EA6 = 16\r\n\tlet DSTADDR;\t// DSTADDR = ATYP + DST.ADDR\r\n\tswitch (addressType) {\r\n\t\tcase 1: // IPv4\r\n\t\t\tDSTADDR = new Uint8Array(\r\n\t\t\t\t[1, ...addressRemote.split('.').map(Number)]\r\n\t\t\t);\r\n\t\t\tbreak;\r\n\t\tcase 2: // \u57DF\u540D\r\n\t\t\tDSTADDR = new Uint8Array(\r\n\t\t\t\t[3, addressRemote.length, ...encoder.encode(addressRemote)]\r\n\t\t\t);\r\n\t\t\tbreak;\r\n\t\tcase 3: // IPv6\r\n\t\t\tDSTADDR = new Uint8Array(\r\n\t\t\t\t[4, ...addressRemote.split(':').flatMap(x => [parseInt(x.slice(0, 2), 16), parseInt(x.slice(2), 16)])]\r\n\t\t\t);\r\n\t\t\tbreak;\r\n\t\tdefault:\r\n\t\t\tlog(`\u65E0\u6548\u7684\u5730\u5740\u7C7B\u578B: ${addressType}`);\r\n\t\t\treturn;\r\n\t}\r\n\tconst socksRequest = new Uint8Array([5, 1, 0, ...DSTADDR, portRemote >> 8, portRemote & 0xff]);\r\n\t// 5: SOCKS5\u7248\u672C, 1: \u8868\u793ACONNECT\u8BF7\u6C42, 0: \u4FDD\u7559\u5B57\u6BB5\r\n\t// ...DSTADDR: \u76EE\u6807\u5730\u5740, portRemote >> 8 \u548C & 0xff: \u5C06\u7AEF\u53E3\u8F6C\u4E3A\u7F51\u7EDC\u5B57\u8282\u5E8F\r\n\tawait writer.write(socksRequest);\r\n\tlog('\u5DF2\u53D1\u9001 SOCKS5 \u8BF7\u6C42');\r\n\r\n\tres = (await reader.read()).value;\r\n\t// \u54CD\u5E94\u683C\u5F0F\uFF08SOCKS5 \u670D\u52A1\u5668 -> Worker\uFF09:\r\n\t//  +----+-----+-------+------+----------+----------+\r\n\t// |VER | REP |  RSV  | ATYP | BND.ADDR | BND.PORT |\r\n\t// +----+-----+-------+------+----------+----------+\r\n\t// | 1  |  1  | X'00' |  1   | Variable |    2     |\r\n\t// +----+-----+-------+------+----------+----------+\r\n\tif (res[1] === 0x00) {\r\n\t\tlog(\"SOCKS5 \u8FDE\u63A5\u5DF2\u5EFA\u7ACB\");\r\n\t} else {\r\n\t\tlog(\"SOCKS5 \u8FDE\u63A5\u5EFA\u7ACB\u5931\u8D25\");\r\n\t\treturn;\r\n\t}\r\n\twriter.releaseLock();\r\n\treader.releaseLock();\r\n\treturn socket;\r\n}\r\n\r\nexport  async function sendMessage(type, ip, add_data = \"\") {\r\n\tif ( AppParam.BotToken !== '' && AppParam.ChatID !== ''){\r\n\t\tlet msg = \"\";\r\n\t\tconst response = await fetch(`http://ip-api.com/json/${ip}?lang=zh-CN`);\r\n\t\tif (response.status == 200) {\r\n\t\t\tconst ipInfo = await response.json();\r\n\t\t\tmsg = `${type}\\nIP: ${ip}\\n\u56FD\u5BB6: ${ipInfo.country}\\n<tg-spoiler>\u57CE\u5E02: ${ipInfo.city}\\n\u7EC4\u7EC7: ${ipInfo.org}\\nASN: ${ipInfo.as}\\n${add_data}`;\r\n\t\t} else {\r\n\t\t\tmsg = `${type}\\nIP: ${ip}\\n<tg-spoiler>${add_data}`;\r\n\t\t}\r\n\t\tlet url = \"https://api.telegram.org/bot\"+ AppParam.BotToken +\"/sendMessage?chat_id=\" + AppParam.ChatID + \"&parse_mode=HTML&text=\" + encodeURIComponent(msg);\r\n\t\treturn fetch(url, {\r\n\t\t\tmethod: 'get',\r\n\t\t\theaders: {\r\n\t\t\t\t'Accept': 'text/html,application/xhtml+xml,application/xml;',\r\n\t\t\t\t'Accept-Encoding': 'gzip, deflate, br',\r\n\t\t\t\t'User-Agent': 'Mozilla/5.0 Chrome/90.0.4430.72'\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n}\r\n", "import CommonUtils from './utils/CommonUtils';\r\n\r\nimport AppParam from './core/AppParam';\r\nimport SubUtils from './utils/SubUtils';\r\nimport {sendMessage, vlessOverWSHandler} from './core/SubService';\r\n\r\n\r\nif (!CommonUtils.isValidUUID(AppParam.userID)) {\r\n\tthrow new Error('uuid is not valid');\r\n}\r\n\r\nexport default {\r\n\t/**\r\n\t * @param {import('@cloudflare/workers-types').Request} request\r\n\t * @param {{UUID: string, PROXYIP: string}} env\r\n\t * @param {import('@cloudflare/workers-types').ExecutionContext} ctx\r\n\t * @returns {Promise<Response>}\r\n\t */\r\n\tasync fetch(request, env){\r\n\t\ttry {\r\n\t\t\tconst { UA, userAgent, upgradeHeader, url } = await initParam(request, env);\r\n\t\t\tlet pathName = url.pathname.toLowerCase();\r\n\t\t\tif (!upgradeHeader || upgradeHeader !== 'websocket') {\r\n\t\t\t\tswitch (pathName) {\r\n\t\t\t\t\tcase '/':\r\n\t\t\t\t\t\treturn await _worker(env, request);\r\n\r\n\t\t\t\t\tcase `/${AppParam.fakeUserID}`:\r\n\t\t\t\t\t\tconst fakeConfig = await SubUtils.getVLESSConfig(AppParam.userID, request.headers.get('Host'), AppParam.sub, 'CF-Workers-SUB', AppParam.RproxyIP, url);\r\n\t\t\t\t\t\treturn new Response(`${fakeConfig}`, { status: 200 });\r\n\r\n\t\t\t\t\tcase `/${AppParam.userID}`:\r\n\t\t\t\t\t\treturn await getSubInfo(request, UA, url, env, userAgent);\r\n\r\n\t\t\t\t\tdefault:\r\n\t\t\t\t\t\treturn new Response('Not found', { status: 404 });\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tAppParam.proxyIP = url.searchParams.get('proxyip') || AppParam.proxyIP;\r\n\t\t\t\tif (new RegExp('/proxyip=', 'i').test(url.pathname)) {\r\n\t\t\t\t\tAppParam.proxyIP = pathName.split('/proxyip=')[1];\r\n\t\t\t\t} else if (new RegExp('/proxyip.', 'i').test(url.pathname)) {\r\n\t\t\t\t\tAppParam.proxyIP = `proxyip.${pathName.split('/proxyip.')[1]}`;\r\n\t\t\t\t}\r\n\t\t\t\tAppParam.socks5Address = url.searchParams.get('socks5') || AppParam.socks5Address;\r\n\t\t\t\tif (new RegExp('/socks5=', 'i').test(url.pathname)) {\r\n\t\t\t\t\tAppParam.socks5Address = url.pathname.split('5=')[1];\r\n\t\t\t\t} else if (new RegExp('/socks://', 'i').test(url.pathname) || new RegExp('/socks5://', 'i').test(url.pathname)) {\r\n\t\t\t\t\tAppParam.socks5Address = url.pathname.split('://')[1].split('#')[0];\r\n\t\t\t\t\tif (AppParam.socks5Address.includes('@')) {\r\n\t\t\t\t\t\tlet userPassword = AppParam.socks5Address.split('@')[0];\r\n\t\t\t\t\t\tconst base64Regex = /^(?:[A-Z0-9+/]{4})*(?:[A-Z0-9+/]{2}==|[A-Z0-9+/]{3}=)?$/i;\r\n\t\t\t\t\t\tif (base64Regex.test(userPassword) && !userPassword.includes(':')) userPassword = atob(userPassword);\r\n\t\t\t\t\t\tAppParam.socks5Address = `${userPassword}@${AppParam.socks5Address.split('@')[1]}`;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tif (AppParam.socks5Address) {\r\n\t\t\t\t\ttry {\r\n\t\t\t\t\t\tAppParam.parsedSocks5Address = CommonUtils.socks5AddressParser(AppParam.socks5Address);\r\n\t\t\t\t\t\tAppParam.enableSocks = true;\r\n\t\t\t\t\t} catch (err) {\r\n\t\t\t\t\t\t/** @type {Error} */\r\n\t\t\t\t\t\tlet e = err;\r\n\t\t\t\t\t\t// @ts-ignore\r\n\t\t\t\t\t\tconsole.log(e.toString());\r\n\t\t\t\t\t\tAppParam.enableSocks = false;\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\tAppParam.enableSocks = false;\r\n\t\t\t\t}\r\n\t\t\t\treturn await vlessOverWSHandler(request);\r\n\t\t\t}\r\n\t\t} catch (err) {\r\n\t\t\t/** @type {Error} */\r\n\t\t\tlet e = err;\r\n\t\t\t// @ts-ignore\r\n\t\t\treturn new Response(e.toString());\r\n\t\t}\r\n\t}\r\n};\r\n\r\n\r\n/**\r\n * \u521D\u59CB\u5316\u53C2\u6570\r\n * @param request\r\n * @param env\r\n */\r\nasync function initParam(request, env) {\r\n\tconst UA = request.headers.get('User-Agent') || 'null';\r\n\tconst userAgent = UA.toLowerCase();\r\n\tAppParam.userID = (env.UUID || AppParam.userID).toLowerCase();\r\n\r\n\tconst url = new URL(request.url);\r\n\r\n\tconst currentDate = new Date();\r\n\tcurrentDate.setHours(0, 0, 0, 0);\r\n\tconst timestamp = Math.ceil(currentDate.getTime() / 1000);\r\n\tconst fakeUserIDMD5 = await CommonUtils.MD5MD5(`${AppParam.userID}${timestamp}`);\r\n\tAppParam.fakeUserID = fakeUserIDMD5.slice(0, 8) + '-' + fakeUserIDMD5.slice(8, 12) + '-' + fakeUserIDMD5.slice(12, 16) + '-' + fakeUserIDMD5.slice(16, 20) + '-' + fakeUserIDMD5.slice(20);\r\n\tAppParam.fakeHostName = fakeUserIDMD5.slice(6, 9) + '.' + fakeUserIDMD5.slice(13, 19);\r\n\t//console.log(`\u865A\u5047UUID: ${fakeUserID}`); // \u6253\u5370fakeID\r\n\r\n\tAppParam.proxyIP = env.PROXYIP || AppParam.proxyIP;\r\n\tAppParam.proxyIPs = await CommonUtils.ADD(AppParam.proxyIP);\r\n\tAppParam.proxyIP = AppParam.proxyIPs[Math.floor(Math.random() * AppParam.proxyIPs.length)];\r\n\t//console.log(proxyIP);\r\n\tAppParam.socks5Address = env.SOCKS5 || AppParam.socks5Address;\r\n\tAppParam.socks5s = await CommonUtils.ADD(AppParam.socks5Address);\r\n\tAppParam.socks5Address = AppParam.socks5s[Math.floor(Math.random() * AppParam.socks5s.length)];\r\n\tAppParam.socks5Address = AppParam.socks5Address.split('//')[1] || AppParam.socks5Address;\r\n\r\n\tAppParam.sub = env.SUB || AppParam.sub;\r\n\tAppParam.subconverter = env.SUBAPI || AppParam.subconverter;\r\n\tlet cIndex = url.searchParams.get('cIndex');\r\n\tAppParam.subconverter = AppParam.subconverters[cIndex] || env.SUBAPI || AppParam.subconverter\r\n\tif (AppParam.subconverter.includes('http://')) {\r\n\t\tAppParam.subconverter = AppParam.subconverter.split('//')[1];\r\n\t\tAppParam.subProtocol = 'http';\r\n\t} else {\r\n\t\tAppParam.subconverter = AppParam.subconverter.split('//')[1] || AppParam.subconverter;\r\n\t}\r\n\tAppParam.subconfig = env.SUBCONFIG || AppParam.subconfig;\r\n\tif (AppParam.socks5Address) {\r\n\t\ttry {\r\n\t\t\tAppParam.parsedSocks5Address = CommonUtils.socks5AddressParser(AppParam.socks5Address);\r\n\t\t\tAppParam.RproxyIP = env.RPROXYIP || 'false';\r\n\t\t\tAppParam.enableSocks = true;\r\n\t\t} catch (err) {\r\n\t\t\t/** @type {Error} */\r\n\t\t\tlet e = err;\r\n\t\t\t// @ts-ignore\r\n\t\t\tconsole.log(e.toString());\r\n\t\t\tAppParam.RproxyIP = env.RPROXYIP || !AppParam.proxyIP ? 'true' : 'false';\r\n\t\t\tAppParam.enableSocks = false;\r\n\t\t}\r\n\t} else {\r\n\t\tAppParam.RproxyIP = env.RPROXYIP || !AppParam.proxyIP ? 'true' : 'false';\r\n\t}\r\n\tif (env.ADD) AppParam.addresses = await CommonUtils.ADD(env.ADD);\r\n\tif (env.ADDAPI) AppParam.addressesapi = await CommonUtils.ADD(env.ADDAPI);\r\n\tif (env.ADDNOTLS) AppParam.addressesnotls = await CommonUtils.ADD(env.ADDNOTLS);\r\n\tif (env.ADDNOTLSAPI) AppParam.addressesnotlsapi = await CommonUtils.ADD(env.ADDNOTLSAPI);\r\n\tif (env.ADDCSV) AppParam.addressescsv = await CommonUtils.ADD(env.ADDCSV);\r\n\tAppParam.DLS = env.DLS || AppParam.DLS;\r\n\tAppParam.BotToken = env.TGTOKEN || AppParam.BotToken;\r\n\tAppParam.ChatID = env.TGID || AppParam.ChatID;\r\n\tif (env.GO2SOCKS5) AppParam.go2Socks5s = await CommonUtils.ADD(env.GO2SOCKS5);\r\n\tconst upgradeHeader = request.headers.get('Upgrade');\r\n\tif (url.searchParams.has('sub') && url.searchParams.get('sub') !== '') AppParam.sub = url.searchParams.get('sub');\r\n\tAppParam.FileName = env.SUBNAME || AppParam.FileName;\r\n\tif (url.searchParams.has('notls')) AppParam.noTLS = 'true';\r\n\treturn { UA, userAgent, upgradeHeader, url };\r\n}\r\n\r\n/**\r\n * \u9996\u9875\r\n * @param env\r\n * @param request\r\n */\r\nasync function _worker(env, request) {\r\n\tconst envKey = env.URL302 ? 'URL302' : (env.URL ? 'URL' : null);\r\n\tif (envKey) {\r\n\t\tconst URLs = await CommonUtils.ADD(env[envKey]);\r\n\t\tconst URL = URLs[Math.floor(Math.random() * URLs.length)];\r\n\t\treturn envKey === 'URL302' ? Response.redirect(URL, 302) : fetch(new Request(URL, request));\r\n\t}\r\n\treturn new Response(JSON.stringify(request.cf, null, 4), { status: 200 });\r\n}\r\n\r\n\r\n/**\r\n * \u83B7\u53D6\u8BA2\u9605\u5185\u5BB9\r\n * @param request\r\n * @param UA\r\n * @param url\r\n * @param env\r\n * @param userAgent\r\n */\r\nasync function getSubInfo(request, UA, url, env, userAgent) {\r\n\tawait sendMessage(`#\u83B7\u53D6\u8BA2\u9605 ${AppParam.FileName}`, request.headers.get('CF-Connecting-IP'), `UA: ${UA}</tg-spoiler>\\n\u57DF\u540D: ${url.hostname}\\n<tg-spoiler>\u5165\u53E3: ${url.pathname + url.search}</tg-spoiler>`);\r\n\tconst vlessConfig = await SubUtils.getVLESSConfig(AppParam.userID, request.headers.get('Host'), AppParam.sub, UA, AppParam.RproxyIP, url);\r\n\tconst now = Date.now();\r\n\t//const timestamp = Math.floor(now / 1000);\r\n\tconst today = new Date(now);\r\n\ttoday.setHours(0, 0, 0, 0);\r\n\tconst UD = Math.floor(((now - today.getTime())/86400000) * 24 * 1099511627776 / 2);\r\n\tlet pagesSum = UD;\r\n\tlet workersSum = UD;\r\n\tlet total = 24 * 1099511627776 ;\r\n\tif (env.CFEMAIL && env.CFKEY){\r\n\t\tconst email = env.CFEMAIL;\r\n\t\tconst key = env.CFKEY;\r\n\t\tconst accountIndex = env.CFID || 0;\r\n\t\tconst accountId = await SubUtils.getAccountId(email, key);\r\n\t\tif (accountId){\r\n\t\t\tconst now = new Date()\r\n\t\t\tnow.setUTCHours(0, 0, 0, 0)\r\n\t\t\tconst startDate = now.toISOString()\r\n\t\t\tconst endDate = new Date().toISOString();\r\n\t\t\tconst Sum = await SubUtils.getSum(accountId, accountIndex, email, key, startDate, endDate);\r\n\t\t\tpagesSum = Sum[0];\r\n\t\t\tworkersSum = Sum[1];\r\n\t\t\ttotal = 102400 ;\r\n\t\t}\r\n\t}\r\n\t//console.log(`pagesSum: ${pagesSum}\\nworkersSum: ${workersSum}\\ntotal: ${total}`);\r\n\tif (userAgent && userAgent.includes('mozilla')){\r\n\t\treturn new Response(`${vlessConfig}`, {\r\n\t\t\tstatus: 200,\r\n\t\t\theaders: {\r\n\t\t\t\t\"Content-Type\": \"text/plain;charset=utf-8\",\r\n\t\t\t\t\"Profile-Update-Interval\": \"6\",\r\n\t\t\t\t\"Subscription-Userinfo\": `upload=${pagesSum}; download=${workersSum}; total=${total}; expire=${AppParam.expire}`,\r\n\t\t\t}\r\n\t\t});\r\n\t} else {\r\n\t\treturn new Response(`${vlessConfig}`, {\r\n\t\t\tstatus: 200,\r\n\t\t\theaders: {\r\n\t\t\t\t\"Content-Disposition\": `attachment; filename=${AppParam.FileName}; filename*=utf-8''${encodeURIComponent(AppParam.FileName)}`,\r\n\t\t\t\t\"Content-Type\": \"text/plain;charset=utf-8\",\r\n\t\t\t\t\"Profile-Update-Interval\": \"6\",\r\n\t\t\t\t\"Subscription-Userinfo\": `upload=${pagesSum}; download=${workersSum}; total=${total}; expire=${AppParam.expire}`,\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n}\r\n", "import type { Middleware } from \"./common\";\n\nconst drainBody: Middleware = async (request, env, _ctx, middlewareCtx) => {\n\ttry {\n\t\treturn await middlewareCtx.next(request, env);\n\t} finally {\n\t\ttry {\n\t\t\tif (request.body !== null && !request.bodyUsed) {\n\t\t\t\tconst reader = request.body.getReader();\n\t\t\t\twhile (!(await reader.read()).done) {}\n\t\t\t}\n\t\t} catch (e) {\n\t\t\tconsole.error(\"Failed to drain the unused request body.\", e);\n\t\t}\n\t}\n};\n\nexport default drainBody;\n", "import type { Middleware } from \"./common\";\n\ninterface JsonError {\n\tmessage?: string;\n\tname?: string;\n\tstack?: string;\n\tcause?: JsonError;\n}\n\nfunction reduceError(e: any): JsonError {\n\treturn {\n\t\tname: e?.name,\n\t\tmessage: e?.message ?? String(e),\n\t\tstack: e?.stack,\n\t\tcause: e?.cause === undefined ? undefined : reduceError(e.cause),\n\t};\n}\n\n// See comment in `bundle.ts` for details on why this is needed\nconst jsonError: Middleware = async (request, env, _ctx, middlewareCtx) => {\n\ttry {\n\t\treturn await middlewareCtx.next(request, env);\n\t} catch (e: any) {\n\t\tconst error = reduceError(e);\n\t\treturn Response.json(error, {\n\t\t\tstatus: 500,\n\t\t\theaders: { \"MF-Experimental-Error-Stack\": \"true\" },\n\t\t});\n\t}\n};\n\nexport default jsonError;\n", "\t\t\t\timport worker, * as OTHER_EXPORTS from \"D:\\\\Dev\\\\Workspaces\\\\CloudFlare\\\\edgetunnel\\\\src\\\\_worker.js\";\n\t\t\t\timport * as __MIDDLEWARE_0__ from \"D:\\\\Dev\\\\Workspaces\\\\CloudFlare\\\\edgetunnel\\\\node_modules\\\\wrangler\\\\templates\\\\middleware\\\\middleware-ensure-req-body-drained.ts\";\nimport * as __MIDDLEWARE_1__ from \"D:\\\\Dev\\\\Workspaces\\\\CloudFlare\\\\edgetunnel\\\\node_modules\\\\wrangler\\\\templates\\\\middleware\\\\middleware-miniflare3-json-error.ts\";\n\n\t\t\t\texport * from \"D:\\\\Dev\\\\Workspaces\\\\CloudFlare\\\\edgetunnel\\\\src\\\\_worker.js\";\n\n\t\t\t\texport const __INTERNAL_WRANGLER_MIDDLEWARE__ = [\n\t\t\t\t\t\n\t\t\t\t\t__MIDDLEWARE_0__.default,__MIDDLEWARE_1__.default\n\t\t\t\t]\n\t\t\t\texport default worker;", "export type Awaitable<T> = T | Promise<T>;\n// TODO: allow dispatching more events?\nexport type Dispatcher = (\n\ttype: \"scheduled\",\n\tinit: { cron?: string }\n) => Awaitable<void>;\n\nexport type IncomingRequest = Request<\n\tunknown,\n\tIncomingRequestCfProperties<unknown>\n>;\n\nexport interface MiddlewareContext {\n\tdispatch: Dispatcher;\n\tnext(request: IncomingRequest, env: any): Awaitable<Response>;\n}\n\nexport type Middleware = (\n\trequest: IncomingRequest,\n\tenv: any,\n\tctx: ExecutionContext,\n\tmiddlewareCtx: MiddlewareContext\n) => Awaitable<Response>;\n\nconst __facade_middleware__: Middleware[] = [];\n\n// The register functions allow for the insertion of one or many middleware,\n// We register internal middleware first in the stack, but have no way of controlling\n// the order that addMiddleware is run in service workers so need an internal function.\nexport function __facade_register__(...args: (Middleware | Middleware[])[]) {\n\t__facade_middleware__.push(...args.flat());\n}\nexport function __facade_registerInternal__(\n\t...args: (Middleware | Middleware[])[]\n) {\n\t__facade_middleware__.unshift(...args.flat());\n}\n\nfunction __facade_invokeChain__(\n\trequest: IncomingRequest,\n\tenv: any,\n\tctx: ExecutionContext,\n\tdispatch: Dispatcher,\n\tmiddlewareChain: Middleware[]\n): Awaitable<Response> {\n\tconst [head, ...tail] = middlewareChain;\n\tconst middlewareCtx: MiddlewareContext = {\n\t\tdispatch,\n\t\tnext(newRequest, newEnv) {\n\t\t\treturn __facade_invokeChain__(newRequest, newEnv, ctx, dispatch, tail);\n\t\t},\n\t};\n\treturn head(request, env, ctx, middlewareCtx);\n}\n\nexport function __facade_invoke__(\n\trequest: IncomingRequest,\n\tenv: any,\n\tctx: ExecutionContext,\n\tdispatch: Dispatcher,\n\tfinalMiddleware: Middleware\n): Awaitable<Response> {\n\treturn __facade_invokeChain__(request, env, ctx, dispatch, [\n\t\t...__facade_middleware__,\n\t\tfinalMiddleware,\n\t]);\n}\n", "// This loads all middlewares exposed on the middleware object and then starts\n// the invocation chain. The big idea is that we can add these to the middleware\n// export dynamically through wrangler, or we can potentially let users directly\n// add them as a sort of \"plugin\" system.\n\nimport ENTRY, { __INTERNAL_WRANGLER_MIDDLEWARE__ } from \"D:\\\\Dev\\\\Workspaces\\\\CloudFlare\\\\edgetunnel\\\\.wrangler\\\\tmp\\\\bundle-EhNwNK\\\\middleware-insertion-facade.js\";\nimport { __facade_invoke__, __facade_register__, Dispatcher } from \"D:\\\\Dev\\\\Workspaces\\\\CloudFlare\\\\edgetunnel\\\\node_modules\\\\wrangler\\\\templates\\\\middleware\\\\common.ts\";\nimport type { WorkerEntrypointConstructor } from \"D:\\\\Dev\\\\Workspaces\\\\CloudFlare\\\\edgetunnel\\\\.wrangler\\\\tmp\\\\bundle-EhNwNK\\\\middleware-insertion-facade.js\";\n\n// Preserve all the exports from the worker\nexport * from \"D:\\\\Dev\\\\Workspaces\\\\CloudFlare\\\\edgetunnel\\\\.wrangler\\\\tmp\\\\bundle-EhNwNK\\\\middleware-insertion-facade.js\";\n\nclass __Facade_ScheduledController__ implements ScheduledController {\n\treadonly #noRetry: ScheduledController[\"noRetry\"];\n\n\tconstructor(\n\t\treadonly scheduledTime: number,\n\t\treadonly cron: string,\n\t\tnoRetry: ScheduledController[\"noRetry\"]\n\t) {\n\t\tthis.#noRetry = noRetry;\n\t}\n\n\tnoRetry() {\n\t\tif (!(this instanceof __Facade_ScheduledController__)) {\n\t\t\tthrow new TypeError(\"Illegal invocation\");\n\t\t}\n\t\t// Need to call native method immediately in case uncaught error thrown\n\t\tthis.#noRetry();\n\t}\n}\n\nfunction wrapExportedHandler(worker: ExportedHandler): ExportedHandler {\n\t// If we don't have any middleware defined, just return the handler as is\n\tif (\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__ === undefined ||\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__.length === 0\n\t) {\n\t\treturn worker;\n\t}\n\t// Otherwise, register all middleware once\n\tfor (const middleware of __INTERNAL_WRANGLER_MIDDLEWARE__) {\n\t\t__facade_register__(middleware);\n\t}\n\n\tconst fetchDispatcher: ExportedHandlerFetchHandler = function (\n\t\trequest,\n\t\tenv,\n\t\tctx\n\t) {\n\t\tif (worker.fetch === undefined) {\n\t\t\tthrow new Error(\"Handler does not export a fetch() function.\");\n\t\t}\n\t\treturn worker.fetch(request, env, ctx);\n\t};\n\n\treturn {\n\t\t...worker,\n\t\tfetch(request, env, ctx) {\n\t\t\tconst dispatcher: Dispatcher = function (type, init) {\n\t\t\t\tif (type === \"scheduled\" && worker.scheduled !== undefined) {\n\t\t\t\t\tconst controller = new __Facade_ScheduledController__(\n\t\t\t\t\t\tDate.now(),\n\t\t\t\t\t\tinit.cron ?? \"\",\n\t\t\t\t\t\t() => {}\n\t\t\t\t\t);\n\t\t\t\t\treturn worker.scheduled(controller, env, ctx);\n\t\t\t\t}\n\t\t\t};\n\t\t\treturn __facade_invoke__(request, env, ctx, dispatcher, fetchDispatcher);\n\t\t},\n\t};\n}\n\nfunction wrapWorkerEntrypoint(\n\tklass: WorkerEntrypointConstructor\n): WorkerEntrypointConstructor {\n\t// If we don't have any middleware defined, just return the handler as is\n\tif (\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__ === undefined ||\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__.length === 0\n\t) {\n\t\treturn klass;\n\t}\n\t// Otherwise, register all middleware once\n\tfor (const middleware of __INTERNAL_WRANGLER_MIDDLEWARE__) {\n\t\t__facade_register__(middleware);\n\t}\n\n\t// `extend`ing `klass` here so other RPC methods remain callable\n\treturn class extends klass {\n\t\t#fetchDispatcher: ExportedHandlerFetchHandler<Record<string, unknown>> = (\n\t\t\trequest,\n\t\t\tenv,\n\t\t\tctx\n\t\t) => {\n\t\t\tthis.env = env;\n\t\t\tthis.ctx = ctx;\n\t\t\tif (super.fetch === undefined) {\n\t\t\t\tthrow new Error(\"Entrypoint class does not define a fetch() function.\");\n\t\t\t}\n\t\t\treturn super.fetch(request);\n\t\t};\n\n\t\t#dispatcher: Dispatcher = (type, init) => {\n\t\t\tif (type === \"scheduled\" && super.scheduled !== undefined) {\n\t\t\t\tconst controller = new __Facade_ScheduledController__(\n\t\t\t\t\tDate.now(),\n\t\t\t\t\tinit.cron ?? \"\",\n\t\t\t\t\t() => {}\n\t\t\t\t);\n\t\t\t\treturn super.scheduled(controller);\n\t\t\t}\n\t\t};\n\n\t\tfetch(request: Request<unknown, IncomingRequestCfProperties>) {\n\t\t\treturn __facade_invoke__(\n\t\t\t\trequest,\n\t\t\t\tthis.env,\n\t\t\t\tthis.ctx,\n\t\t\t\tthis.#dispatcher,\n\t\t\t\tthis.#fetchDispatcher\n\t\t\t);\n\t\t}\n\t};\n}\n\nlet WRAPPED_ENTRY: ExportedHandler | WorkerEntrypointConstructor | undefined;\nif (typeof ENTRY === \"object\") {\n\tWRAPPED_ENTRY = wrapExportedHandler(ENTRY);\n} else if (typeof ENTRY === \"function\") {\n\tWRAPPED_ENTRY = wrapWorkerEntrypoint(ENTRY);\n}\nexport default WRAPPED_ENTRY;\n"],
  "mappings": "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",
  "names": ["tcpSocket", "URL", "now"]
}
